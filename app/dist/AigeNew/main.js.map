{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-material.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/enums/app-enum.ts","webpack:///./src/app/enums/cargo.type.ts","webpack:///./src/app/enums/enum.index.ts","webpack:///./src/app/enums/equipment.group.ts","webpack:///./src/app/enums/equipment.size.ts","webpack:///./src/app/enums/equipment.type.ts","webpack:///./src/app/enums/geoscope.type.ts","webpack:///./src/app/enums/intermodal.transport.mode.ts","webpack:///./src/app/enums/service.type.intermodal.ts","webpack:///./src/app/enums/serviceType.ts","webpack:///./src/app/home/home/home.component.css","webpack:///./src/app/home/home/home.component.html","webpack:///./src/app/home/home/home.component.ts","webpack:///./src/app/intermodal/im.result/result-intermodal.component.css","webpack:///./src/app/intermodal/im.result/result-intermodal.component.html","webpack:///./src/app/intermodal/im.result/result-intermodal.component.ts","webpack:///./src/app/intermodal/im.routes-routing.module.ts","webpack:///./src/app/intermodal/im.routes.module.ts","webpack:///./src/app/intermodal/im.search/search-intermodal.component.css","webpack:///./src/app/intermodal/im.search/search-intermodal.component.form.ts","webpack:///./src/app/intermodal/im.search/search-intermodal.component.html","webpack:///./src/app/intermodal/im.search/search-intermodal.component.ts","webpack:///./src/app/intermodal/services/im.search.service.ts","webpack:///./src/app/missingRoutes/missing-routes.module.ts","webpack:///./src/app/missingRoutes/missing-routes.result.component/masterdata-routes.component.css","webpack:///./src/app/missingRoutes/missing-routes.result.component/masterdata-routes.component.html","webpack:///./src/app/missingRoutes/missing-routes.result.component/masterdata-routes.component.ts","webpack:///./src/app/missingRoutes/missing-routes.routing.module.ts","webpack:///./src/app/missingRoutes/missing-routes.search.component/search-routes.component.css","webpack:///./src/app/missingRoutes/missing-routes.search.component/search-routes.component.html","webpack:///./src/app/missingRoutes/missing-routes.search.component/search-routes.component.ts","webpack:///./src/app/missingRoutes/services/routes.search.service.ts","webpack:///./src/app/model/country.model.ts","webpack:///./src/app/model/geoscope.model.ts","webpack:///./src/app/newRoutingEngine/new-routing-engine.module.ts","webpack:///./src/app/newRoutingEngine/new-routing-engine.routes.module.ts","webpack:///./src/app/newRoutingEngine/nre.result.component/nre-result.component.css","webpack:///./src/app/newRoutingEngine/nre.result.component/nre-result.component.html","webpack:///./src/app/newRoutingEngine/nre.result.component/nre-result.component.ts","webpack:///./src/app/newRoutingEngine/nre.search.component/nre-search.component.css","webpack:///./src/app/newRoutingEngine/nre.search.component/nre-search.component.html","webpack:///./src/app/newRoutingEngine/nre.search.component/nre-search.component.ts","webpack:///./src/app/newRoutingEngine/services/new-routing-engine.search.service.ts","webpack:///./src/app/pipes/change-detector-pipe.ts","webpack:///./src/app/services/config.service.ts","webpack:///./src/app/services/country.service.ts","webpack:///./src/app/services/date.utils/date.adapter.ts","webpack:///./src/app/services/date.utils/date.format.ts","webpack:///./src/app/services/enum.service.ts","webpack:///./src/app/services/geoscope.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatFormFieldModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatLineModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatOptionModule,\r\n  MatPaginatorModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatToolbarModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [CdkTableModule, MatTableModule, MatSortModule, MatPaginatorModule, MatGridListModule, MatAutocompleteModule, MatDialogModule, MatLineModule, MatListModule, MatDatepickerModule, MatNativeDateModule, MatMenuModule, MatButtonModule, MatCheckboxModule, MatInputModule, MatRadioModule, MatSelectModule, MatOptionModule, MatToolbarModule, MatIconModule, MatCardModule, MatProgressSpinnerModule, MatFormFieldModule],\r\n  exports: [CdkTableModule, MatTableModule, MatSortModule, MatPaginatorModule, MatGridListModule, MatAutocompleteModule, MatDialogModule, MatLineModule, MatListModule, MatDatepickerModule, MatNativeDateModule, MatMenuModule, MatButtonModule, MatCheckboxModule, MatInputModule, MatRadioModule, MatSelectModule, MatOptionModule, MatToolbarModule, MatIconModule, MatCardModule, MatProgressSpinnerModule, MatFormFieldModule]\r\n})\r\n\r\nexport class AppMaterialModule {\r\n}\r\n","import {RouterModule, Routes} from '@angular/router';\r\nimport {HomeComponent} from './home/home/home.component';\r\nimport {NgModule} from '@angular/core';\r\nimport {AppComponent} from './app.component';\r\nimport {ChangeDetectorPipe} from './pipes/change-detector-pipe';\r\n\r\nexport const appRoutes: Routes = [\r\n  {path: 'home', component: HomeComponent},\r\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\r\n  {path: '**', redirectTo: '/home', pathMatch: 'full'},\r\n\r\n];\r\n\r\nexport const routedComponents = [AppComponent, HomeComponent, ChangeDetectorPipe];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n      {enableTracing: true} // <-- debugging purposes only\r\n    )\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","module.exports = \".example-icon {\\r\\n  padding: 0 14px;\\r\\n}\\r\\n\\r\\n.example-spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\"","module.exports = \"<base href=\\\"/\\\">\\r\\n<div class=\\\"mdl-layout mdl-js-layout mdl-layout--fixed-header\\\">\\r\\n  <header class=\\\"mdl-layout__header\\\">\\r\\n    <div class=\\\"mdl-layout__header-row\\\">\\r\\n      <span class=\\\"mdl-layout-title\\\">{{ title }}</span>\\r\\n      <div class=\\\"mdl-layout-spacer\\\"></div>\\r\\n      <div class=\\\"mdl-layout-spacer\\\"></div>\\r\\n      <nav class=\\\"mdl-navigation mdl-layout--large-screen-only\\\">\\r\\n        <a class=\\\"mdl-navigation__link\\\" [routerLink]=\\\"['/home']\\\" routerLinkActive=\\\"active-link\\\">Home</a>\\r\\n        <a class=\\\"mdl-navigation__link\\\" [routerLink]=\\\"['/searchNewRoutes']\\\" routerLinkActive=\\\"active-link\\\">NRE Ocean\\r\\n          Routes</a>\\r\\n        <a class=\\\"mdl-navigation__link\\\" [routerLink]=\\\"['/searchIntermodal']\\\" routerLinkActive=\\\"active-link\\\">Intermodal\\r\\n          Key Figures</a>\\r\\n        <a class=\\\"mdl-navigation__link\\\" [routerLink]=\\\"['/searchRoutes']\\\" routerLinkActive=\\\"active-link\\\">COQU Missing\\r\\n          Routings\\r\\n        </a>\\r\\n\\r\\n      </nav>\\r\\n    </div>\\r\\n  </header>\\r\\n  <main class=\\\"mdl-layout__content\\\" style=\\\"padding: 20px;\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </main>\\r\\n</div>\\r\\n\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  title = 'Product Catalogue Analyzer';\r\n\r\n}\r\n","import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {AppRoutingModule, routedComponents} from './app-routing.module';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {NgModule} from '@angular/core';\r\nimport {APP_BASE_HREF} from '@angular/common';\r\nimport {IntermodalRoutesModule} from './intermodal/im.routes.module';\r\nimport {EnumService} from './services/enum.service';\r\nimport {MissingRoutingsModule} from './missingRoutes/missing-routes.module';\r\nimport {NewRoutingEngineModule} from './newRoutingEngine/new-routing-engine.module';\r\nimport {SharedModule} from './shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [routedComponents],\r\n  imports: [\r\n\r\n\r\n    BrowserAnimationsModule,\r\n    SharedModule,\r\n    MissingRoutingsModule,\r\n    IntermodalRoutesModule,\r\n    NewRoutingEngineModule,\r\n    AppRoutingModule\r\n\r\n  ],\r\n  providers: [EnumService,\r\n    {provide: APP_BASE_HREF, useValue: window['_app_base'] || '/'}],\r\n\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","export enum EntityEnum {\r\n  COUNTRY = 'country',\r\n  CONTRACT = 'contract',\r\n  CONTRACT_GROUP = 'contractgroup',\r\n  GEOSCOPE = 'geoscope',\r\n  INTERMODAL_RESULT = 'keyfigure',\r\n  LOCATIONS = 'locations',\r\n  MEMBER = 'member',\r\n  MISSING_ROUTINGS = 'missingroutings',\r\n  PORTS = 'ports',\r\n  PREFERRED_PORTS = 'preferredPort',\r\n  ROUTING_RESULT = 'oceanroutings',\r\n  TRADE = 'trade',\r\n  VESSEL_SYSTEMS = 'vesselsystems'\r\n\r\n}\r\n","export enum CargoType {\r\n  GENERAL = 'G',\r\n  REEFER = 'R',\r\n  DG = 'D',\r\n  REEFER_DG = 'RD',\r\n  OOG = 'O',\r\n  OOG_DG = 'OD',\r\n  NOR = 'NR',\r\n  NOR_DG = 'ND',\r\n  LOST_SLOT = 'LS'\r\n}\r\n","/**\r\n * Created by ekirschning on 04.02.2018.\r\n */\r\n\r\nexport * from './intermodal.transport.mode';\r\nexport * from './serviceType';\r\nexport * from './service.type.intermodal';\r\nexport * from './cargo.type';\r\nexport * from './equipment.size';\r\nexport * from './equipment.type';\r\nexport * from './geoscope.type';\r\nexport * from './equipment.group';\r\n","export enum EquipmentGroup {\r\n  GENERAL = 'G',\r\n  REEFER = 'R',\r\n  SPECIAL = 'S',\r\n}\r\n","export enum EquipmentSize {\r\n  _20 = '20',\r\n  _40 = '40',\r\n}\r\n","export enum EquipmentType {\r\n  GP = 'GENERAL PURPOSE',\r\n  HC = 'GENERAL PURPOSE HIGH CUBE',\r\n  RH = 'REEFER HIGH CUBE',\r\n  RF = 'REEFER',\r\n  FR = 'FLATRACK',\r\n  FH = 'FLATRACK HIGH CUBE',\r\n  OH = 'OPENTOP HIGH CUBE',\r\n  PL = 'PLATFORM',\r\n  TK = 'TANK',\r\n  BK = 'BULK CONTAINER',\r\n  VE = 'VENTILATED',\r\n  GN = 'GENSET NOSE MOUNT',\r\n  GU = 'GENSET UNDERSLUNG',\r\n  CH = 'CHASSIS',\r\n  DF = 'DEFAULT'\r\n}\r\n","export enum GeoScopeType {\r\n  LOCATION = 'L',\r\n  CITY = 'T',\r\n  FACILITY = 'F',\r\n  POSTAL_CODE = 'P',\r\n}\r\n","export enum IntermodalMode {\r\n  ALL = 'ALL',\r\n  TRUCK = 'TRUCK',\r\n  RAIL = 'RAIL',\r\n  BARGE = 'BARGE',\r\n  RAIL_ROAD = 'RAIL/ROAD',\r\n  BARGE_ROAD = 'BARGE/ROAD'\r\n}\r\n","export enum ServiceTypeIntermodal {\r\n  INLAND = 'I',\r\n  DOOR = 'D',\r\n}\r\n","export enum ServiceType {\r\n  PORT = 'P',\r\n  INLAND = 'I',\r\n  DOOR = 'D',\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--3-col\\\">\\r\\n    Home\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  min-width: 300px;\\r\\n}\\r\\n\\r\\n.example-header {\\r\\n  min-height: 64px;\\r\\n  padding: 8px 24px 0;\\r\\n}\\r\\n\\r\\n.mat-table {\\r\\n  overflow: auto;\\r\\n  max-height: 500px;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-header-cell.mat-sort-header-sorted {\\r\\n  color: black;\\r\\n}\\r\\n\\r\\nmat-row:nth-child(even) {\\r\\n  background-color: #ecf4ff;;\\r\\n}\\r\\n\\r\\nmat-row:nth-child(odd) {\\r\\n  background-color: #ecf4dd;;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-container mat-elevation-z8\\\">\\r\\n  <div class=\\\"example-header\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <mat-table #table [dataSource]=\\\"dataSource\\\" matSort matSort matSortDirection=\\\"asc\\\">\\r\\n\\r\\n    <!-- Inland Column -->\\r\\n    <ng-container matColumnDef=\\\"inland\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Inland</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.from.locationCode}}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Via Column -->\\r\\n    <ng-container matColumnDef=\\\"via\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Via</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.via ? element.via.locationCode : \\\"\\\"}}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Port Column -->\\r\\n    <ng-container matColumnDef=\\\"port\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Port</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element \\\"> {{element.to.locationCode}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <!-- Transport Mode Column -->\\r\\n    <ng-container matColumnDef=\\\"transportmode\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>TransportMode</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.transportMode}}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Rate Column -->\\r\\n    <ng-container matColumnDef=\\\"rate\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Rate</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.rate }} {{ element.currency }}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- EQSize Column -->\\r\\n    <ng-container matColumnDef=\\\"eqsize\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>EQSize</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.equipmentSize}}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- EQType -->\\r\\n    <ng-container matColumnDef=\\\"eqgroup\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>EQGroup</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.equipmentGroup}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <!-- IsPrferred Column -->\\r\\n    <ng-container matColumnDef=\\\"preferred\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Preferred</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.isPreferred}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n  </mat-table>\\r\\n\\r\\n  <mat-paginator #paginator\\r\\n                 [pageSize]=\\\"5\\\"\\r\\n                 [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\r\\n                 [showFirstLastButtons]=\\\"true\\\">\\r\\n  </mat-paginator>\\r\\n</div>\\r\\n\"","import {AfterViewInit, ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewChild} from '@angular/core';\r\n\r\nimport {KeyFigureModel} from '../models/keyfigure.model';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-result-intermodal',\r\n  templateUrl: './result-intermodal.component.html',\r\n  styleUrls: ['./result-intermodal.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ResultIntermodalComponent implements OnChanges, AfterViewInit {\r\n\r\n  @Input()\r\n  keyFigures: Array<KeyFigureModel> = [];\r\n\r\n  displayedColumns = ['inland', 'via', 'port', 'transportmode', 'rate', 'eqsize', 'eqgroup', 'preferred'];\r\n  dataSource: any;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n\r\n  /**\r\n   * Set the sort after the view init since this component will\r\n   * be able to query its view for the initialized sort.\r\n   */\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.dataSource = new MatTableDataSource(this.keyFigures);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {SearchIntermodalComponent} from './im.search/search-intermodal.component';\r\nimport {ResultIntermodalComponent} from './im.result/result-intermodal.component';\r\n\r\nexport const intermodalRoutes: Routes = [\r\n  {path: 'searchIntermodal', component: SearchIntermodalComponent}\r\n];\r\nexport const routedComponents = [SearchIntermodalComponent, ResultIntermodalComponent];\r\n\r\n@NgModule({\r\n    imports: [\r\n      RouterModule.forChild(intermodalRoutes)\r\n    ],\r\n    exports: [RouterModule]\r\n\r\n  }\r\n)\r\n\r\nexport class IntermodalRoutesRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {IntermodalRoutesRoutingModule, routedComponents} from './im.routes-routing.module';\r\nimport {EnumService} from '../services/enum.service';\r\nimport {DateAdapter, MAT_DATE_FORMATS} from '@angular/material';\r\nimport {AppDateAdapter} from '../services/date.utils/date.adapter';\r\nimport {APP_DATE_FORMATS} from '../services/date.utils/date.format';\r\nimport {GeoScopeService} from '../services/geoscope.service';\r\nimport {IntermodalSearchService} from './services/im.search.service';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {CountryService} from '../services/country.service';\r\n\r\n@NgModule({\r\n\r\n  declarations: [routedComponents],\r\n\r\n  imports: [SharedModule, IntermodalRoutesRoutingModule],\r\n\r\n  providers: [CountryService, GeoScopeService, IntermodalSearchService, EnumService,\r\n    {provide: DateAdapter, useClass: AppDateAdapter},\r\n    {provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS}\r\n  ]\r\n})\r\nexport class IntermodalRoutesModule {\r\n}\r\n","module.exports = \"\\r\\n.form-style-9 {\\r\\n  max-width: 400px;\\r\\n  background: #FAFAFA;\\r\\n  padding: 10px;\\r\\n  margin: 20px auto;\\r\\n  box-shadow: 1px 1px 25px rgba(0, 0, 0, 0.35);\\r\\n  border-radius: 10px;\\r\\n  border: 2px solid #305A72;\\r\\n}\\r\\n\\r\\n.smallFont {\\r\\n  font: 400 12px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\r\\n}\\r\\n\\r\\n.serviceType {\\r\\n  font: 400 12px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\r\\n  margin: 5px 0px 10px 15px;\\r\\n}\\r\\n\\r\\n.floatLeft {\\r\\n  float: left;\\r\\n  padding: 1px 1px 1px 1px;\\r\\n  margin: 1px 1px 1px 1px;\\r\\n  font-weight: bold;\\r\\n  color: #13557b;\\r\\n  height: 4px;\\r\\n  line-height: 0px;\\r\\n}\\r\\n\\r\\n/* ml */\\r\\n\\r\\n.stopFloat {\\r\\n  display: block;\\r\\n  float: none;\\r\\n  clear: both;\\r\\n  height: 0px; /* 1px, wenn kleine Linie bleiben soll */\\r\\n  font-size: 0px;\\r\\n  line-height: 0px;\\r\\n  background: #ffffff;\\r\\n}\\r\\n\\r\\nselect:hover {\\r\\n  background: rgba(0, 0, 0, 0);\\r\\n  color: #3a7999;\\r\\n}\\r\\n\\r\\n.tooltip {\\r\\n  position: relative;\\r\\n  display: inline-block;\\r\\n  border-bottom: 1px dotted black; /* If you want dots under the hoverable text */\\r\\n  visibility: hidden;\\r\\n  width: 120px;\\r\\n  background-color: black;\\r\\n  color: #fff;\\r\\n  text-align: center;\\r\\n  padding: 5px 0;\\r\\n  border-radius: 6px;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n/* Show the tooltip text when you mouse over the tooltip container */\\r\\n\\r\\n.tooltip:hover {\\r\\n  visibility: visible;\\r\\n}\\r\\n\\r\\n.isHidden {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.isShown {\\r\\n  display: inherit;\\r\\n}\\r\\n\"","import {FormControl, FormGroup, Validators} from '@angular/forms';\r\n\r\nexport class IntermodalSearchReactiveForm {\r\n  private _searchIntermodalForm: FormGroup;\r\n\r\n  constructor() {\r\n    this._searchIntermodalForm = this.createForm();\r\n  }\r\n\r\n  private createForm() {\r\n    return new FormGroup({\r\n      includeKeyFigure: new FormControl(),\r\n      includeImTariff: new FormControl(),\r\n      includeImSchedule: new FormControl(),\r\n      preOnCarriage: new FormControl('true', Validators.required),\r\n      inlandLocation: new FormControl('', Validators.required),\r\n      inlandGeoScopeType: new FormControl(),\r\n      countryCode: new FormControl(''),\r\n      transportMode: new FormControl('', Validators.required),\r\n      prefPort: new FormControl(''),\r\n      includeAllPreferredPorts: new FormControl(true),\r\n      equipmentType: new FormControl('', Validators.required),\r\n      startDate: new FormControl(new Date().toISOString(), Validators.required),\r\n      endDate: new FormControl(new Date().toISOString()),\r\n      eq20: new FormControl(true),\r\n      eq40: new FormControl(true),\r\n      eqHC: new FormControl(true),\r\n      weight20: new FormControl(),\r\n      weight40: new FormControl(),\r\n      weightBasedOnly: new FormControl()\r\n\r\n    });\r\n  }\r\n\r\n\r\n  get searchIntermodalForm(): FormGroup {\r\n    return this._searchIntermodalForm;\r\n  }\r\n\r\n  get includeKeyFigure() {\r\n    return this._searchIntermodalForm.get('includeKeyFigure');\r\n  }\r\n\r\n  get includeImTariff() {\r\n    return this._searchIntermodalForm.get('includeImTariff');\r\n  }\r\n\r\n\r\n  get includeImSchdeule() {\r\n    return this._searchIntermodalForm.get('includeImSchedule');\r\n  }\r\n\r\n  get preOnCarriage() {\r\n    return this._searchIntermodalForm.get('preOnCarriage');\r\n  }\r\n\r\n  get inlandLocation() {\r\n    return this._searchIntermodalForm.get('inlandLocation');\r\n  }\r\n\r\n\r\n  get countryCode() {\r\n    return this._searchIntermodalForm.get('countryCode');\r\n  }\r\n\r\n  get prefPort() {\r\n    return this._searchIntermodalForm.get('prefPort');\r\n  }\r\n\r\n  get inlandGeoScopeType() {\r\n    return this._searchIntermodalForm.get('inlandGeoScopeType');\r\n  }\r\n\r\n  get includeAllPreferredPorts() {\r\n    return this._searchIntermodalForm.get('includeAllPreferredPorts');\r\n  }\r\n\r\n  get eqType() {\r\n    return this._searchIntermodalForm.get('equipmentType');\r\n  }\r\n\r\n\r\n  get transportMode() {\r\n    return this._searchIntermodalForm.get('transportMode');\r\n  }\r\n\r\n\r\n  get startDate() {\r\n    return this._searchIntermodalForm.get('startDate');\r\n  }\r\n\r\n  get endDate() {\r\n    return this._searchIntermodalForm.get('endDate');\r\n  }\r\n\r\n  get eqSize20() {\r\n    return this._searchIntermodalForm.get('eq20');\r\n  }\r\n\r\n  get eqSize40() {\r\n    return this._searchIntermodalForm.get('eq40');\r\n  }\r\n\r\n  get weight20() {\r\n    return this._searchIntermodalForm.get('weight20');\r\n\r\n  }\r\n\r\n  get weight40() {\r\n    return this._searchIntermodalForm.get('weight40');\r\n\r\n  }\r\n\r\n  get weigthBasedOnly() {\r\n    return this._searchIntermodalForm.get('weightBasedOnly');\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<!-- <p>Form value: {{ form.value | json }}</p>\\r\\n<p>Form status: {{ form.status | json }}</p>\\r\\n<p>PrefPorts: {{ filteredPortGeoScopes | json }}</p>\\r\\n-->\\r\\n<form class=\\\"form-style-9 mdl-color-text--light-blue-900\\\" style=\\\"background: #ecf4ff;\\\"\\r\\n      [formGroup]=\\\"form\\\"\\r\\n      novalidate (ngSubmit)=\\\"filterKeyFigures()\\\">\\r\\n  <div id=\\\"im-search-form-title\\\" style=\\\"text-align: center;font-weight: bold;\\\">\\r\\n    {{ title }}\\r\\n  </div>\\r\\n  <div>\\r\\n\\r\\n    <mat-spinner [style.display]=\\\"showSpinner ? 'block' :'none'\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n  <!--  Service, Pre-OnCarriage -->\\r\\n  <div *ngIf=\\\"isCollapsed\\\">\\r\\n    <div style=\\\"border-width: 2px; border-color: #337DA8; border-style: solid; padding:5px; margin: 5px; \\\">\\r\\n      <span>Include Validator for:</span>\\r\\n\\r\\n      <mat-grid-list cols=\\\"5\\\" style=\\\"  margin: 10px;\\\" rowHeight=\\\"65px;\\\">\\r\\n        <mat-grid-tile colspan=\\\"3\\\">\\r\\n\\r\\n          <div>\\r\\n            <label class=\\\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect \\\" for=\\\"includeKF\\\">\\r\\n              <input type=\\\"checkbox\\\" id=\\\"includeKF\\\" class=\\\"mdl-checkbox__input\\\" formControlName=\\\"includeKeyFigure\\\">\\r\\n              <span class=\\\"mat-small\\\">Key Figures</span>\\r\\n            </label>\\r\\n            <label class=\\\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect\\\" for=\\\"includeTariff\\\">\\r\\n              <input type=\\\"checkbox\\\" id=\\\"includeTariff\\\" class=\\\"mdl-checkbox__input\\\" formControlName=\\\"includeImTariff\\\">\\r\\n              <span class=\\\"mat-small\\\">Im Tariffs</span>\\r\\n            </label>\\r\\n            <label class=\\\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect\\\" for=\\\"includeSchedule\\\">\\r\\n              <input type=\\\"checkbox\\\" id=\\\"includeSchedule\\\" class=\\\"mdl-checkbox__input\\\"\\r\\n                     formControlName=\\\"includeImSchedule\\\">\\r\\n              <span class=\\\"mat-small\\\">Im Schedules</span>\\r\\n            </label>\\r\\n          </div>\\r\\n        </mat-grid-tile>\\r\\n        <mat-grid-tile colspan=\\\"2\\\">\\r\\n          <div>\\r\\n            <label class=\\\"mdl-radio mdl-js-radio mdl-js-ripple-effect\\\" for=\\\"preCarriage\\\">\\r\\n              <input type=\\\"radio\\\" id=\\\"preCarriage\\\" class=\\\"mdl-radio__button\\\" formControlName=\\\"preOnCarriage\\\"\\r\\n                     value=\\\"true\\\">\\r\\n              <span class=\\\"mat-small\\\">PreCarriage</span>\\r\\n            </label>\\r\\n            <label class=\\\"mdl-radio mdl-js-radio mdl-js-ripple-effect\\\" for=\\\"onCarriage\\\">\\r\\n              <input type=\\\"radio\\\" id=\\\"onCarriage\\\" class=\\\"mdl-radio__button\\\" formControlName=\\\"preOnCarriage\\\"\\r\\n                     value=\\\"false\\\">\\r\\n              <span class=\\\"mat-small\\\">OnCarriage</span>\\r\\n            </label>\\r\\n          </div>\\r\\n        </mat-grid-tile>\\r\\n      </mat-grid-list>\\r\\n    </div>\\r\\n\\r\\n    <div style=\\\"border-width: 2px; border-color: #337DA8; border-style: solid; padding:5px; margin: 5px; \\\">\\r\\n      <!--- Inland Location, Country Code, Geo Scope Type Transport Mode -->\\r\\n      <mat-form-field style=\\\"width: 150px; margin-left: 20px; margin-right: 20px;  margin-bottom: 10px;\\\">\\r\\n        <input matInput placeholder=\\\"Inland Location\\\" formControlName=\\\"inlandLocation\\\" [matAutocomplete]=\\\"autoFrom\\\">\\r\\n        <mat-hint align=\\\"start\\\">e.g. DEDUS</mat-hint>\\r\\n        <mat-error>\\r\\n        <span\\r\\n          *ngIf=\\\"!form.get('inlandLocation').valid && form.get('inlandLocation').touched\\\">Please enter Inland Location !</span>\\r\\n        </mat-error>\\r\\n        <mat-autocomplete #autoFrom=\\\"matAutocomplete\\\">\\r\\n          <mat-option *ngFor=\\\"let item of filteredInlandGeoScopes\\\" [value]=\\\"item.locationCode\\\"\\r\\n                      style=\\\"height: 30px; line-height: 20px; background-color: #ecf4ff;\\\">\\r\\n            <span class=\\\"smallFont\\\"> {{ item.locationCode }}</span>\\r\\n          </mat-option>\\r\\n        </mat-autocomplete>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field style=\\\"width: 120px; margin-left: 20px; margin-right: 20px;\\\"\\r\\n                      [ngClass]=\\\"{'isHidden': ! isCountryDisplayed()}\\\">\\r\\n        <input id=\\\"countryCodeControl\\\" matInput placeholder=\\\"Country Code\\\" formControlName=\\\"countryCode\\\"\\r\\n               [matAutocomplete]=\\\"autoCountry\\\">\\r\\n        <mat-error>\\r\\n          <span *ngIf=\\\"!form.get('countryCode').valid && form.get('countryCode').touched\\\">Enter e.g. DE, BR !</span>\\r\\n        </mat-error>\\r\\n        <mat-autocomplete #autoCountry=\\\"matAutocomplete\\\">\\r\\n          <mat-option id=\\\"countryCodeOption\\\" *ngFor=\\\"let country of filteredCountries\\\" [value]=\\\"country.code\\\"\\r\\n                      style=\\\"height: 30px; line-height: 20px;\\\">\\r\\n            <span class=\\\"smallFont\\\"> {{ country.code }}</span>\\r\\n          </mat-option>\\r\\n        </mat-autocomplete>\\r\\n      </mat-form-field>\\r\\n      <div style=\\\"margin-bottom: 15px; margin-left: 20px; margin-right: 10px;\\\"> Type:\\r\\n        <label class=\\\"mdl-radio mdl-js-radio mdl-js-ripple-effect\\\" for=\\\"option-1\\\">\\r\\n          <input type=\\\"radio\\\" id=\\\"option-1\\\" class=\\\"mdl-radio__button\\\" formControlName=\\\"inlandGeoScopeType\\\" value=\\\"L\\\">\\r\\n          <span class=\\\"mat-small\\\">Location</span>\\r\\n        </label>\\r\\n        <label class=\\\"mdl-radio mdl-js-radio mdl-js-ripple-effect\\\" for=\\\"option-2\\\">\\r\\n          <input type=\\\"radio\\\" id=\\\"option-2\\\" class=\\\"mdl-radio__button\\\" formControlName=\\\"inlandGeoScopeType\\\" value=\\\"T\\\">\\r\\n          <span class=\\\"mat-small\\\">City</span>\\r\\n        </label>\\r\\n        <label class=\\\"mdl-radio mdl-js-radio mdl-js-ripple-effect\\\" for=\\\"option-3\\\">\\r\\n          <input type=\\\"radio\\\" id=\\\"option-3\\\" class=\\\"mdl-radio__button\\\" formControlName=\\\"inlandGeoScopeType\\\" value=\\\"F\\\">\\r\\n          <span class=\\\"mat-small\\\">Facility</span>\\r\\n        </label>\\r\\n        <label class=\\\"mdl-radio mdl-js-radio mdl-js-ripple-effect\\\" for=\\\"option-4\\\">\\r\\n          <input type=\\\"radio\\\" id=\\\"option-4\\\" class=\\\"mdl-radio__button\\\" formControlName=\\\"inlandGeoScopeType\\\" value=\\\"P\\\">\\r\\n          <span class=\\\"mat-small\\\">Postal Code</span>\\r\\n        </label>\\r\\n      </div>\\r\\n      <div style=\\\"margin-top: 5px;  margin-left: 20px;\\\">TP Mode:\\r\\n        <select placeholder=\\\"transport mode\\\" formControlName=\\\"transportMode\\\"\\r\\n                class=\\\"mdl-color-text--light-blue-900\\\">\\r\\n          <option *ngFor=\\\"let t of transportModes\\\" [value]=\\\"t\\\">{{t}}\\r\\n          </option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--- Preferred Port: Location, GeoSocope Types -->\\r\\n    <div style=\\\"border-width: 2px; border-color: #337DA8; border-style: solid; padding:5px; margin: 5px; \\\">\\r\\n      <div *ngIf=\\\"allPortsSelected()\\\">\\r\\n        <span style=\\\"margin-top: 5px;  margin-left: 20px;\\\">Preferred Ports: </span>\\r\\n\\r\\n        <span class=\\\"mat-small\\\" *ngFor=\\\"let item of filteredPortGeoScopes; let isLast =last\\\"\\r\\n              style=\\\"margin-top: 5px;  margin-left: 20px;\\\">\\r\\n          {{ item.locationCode}} {{isLast ? '' : ', '}}\\r\\n        </span>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"! allPortsSelected()\\\">\\r\\n\\r\\n        <mat-form-field style=\\\"width: 150px; margin-left: 20px; margin-right: 20px;\\\">\\r\\n          <mat-select placeholder=\\\"Preferred Ports\\\" formControlName=\\\"prefPort\\\">\\r\\n            <mat-option *ngFor=\\\"let port of filteredPortGeoScopes\\\" [value]=\\\"port.locationCode\\\">\\r\\n              {{port.locationCode}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div style=\\\" padding:5px; margin: 5px;\\\">\\r\\n        <label class=\\\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect \\\" for=\\\"includeAll\\\">\\r\\n          <input type=\\\"checkbox\\\" id=\\\"includeAll\\\" class=\\\"mdl-checkbox__input\\\" formControlName=\\\"includeAllPreferredPorts\\\">\\r\\n          <span class=\\\"mat-small\\\">Include All Preferred Ports</span>\\r\\n        </label>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!--- Start and End Date -->\\r\\n    <div style=\\\"border-width: 2px; border-color: #337DA8; border-style: solid; padding:5px; margin: 5px; \\\">\\r\\n\\r\\n      <mat-form-field style=\\\"width: 150px; margin-left: 20px; margin-right: 20px; \\\">\\r\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"start date\\\"\\r\\n               formControlName=\\\"startDate\\\">\\r\\n        <mat-error>\\r\\n          <span *ngIf=\\\"!form.get('startDate').valid && form.get('startDate').touched\\\">Please enter Start Date!</span>\\r\\n        </mat-error>\\r\\n\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker1></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field style=\\\"width: 150px;\\\">\\r\\n        <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"end date\\\"\\r\\n               formControlName=\\\"endDate\\\" readonly>\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker2 disabled=\\\"true\\\"></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <!--- Equipment -->\\r\\n    <div style=\\\"border-width: 2px; border-color: #337DA8; border-style: solid; padding:5px; margin: 5px; \\\">\\r\\n      <mat-error>\\r\\n        <span *ngIf=\\\"! eqSizeSelected()\\\">Please enter an EQ Size!</span>\\r\\n      </mat-error>\\r\\n      <mat-grid-list cols=\\\"7\\\">\\r\\n        <mat-grid-tile colspan=\\\"3\\\">\\r\\n          <span class=\\\"mat-small\\\" style=\\\"margin-left: 15px; margin-right: 10px;\\\">EQ Size:</span>\\r\\n          <label class=\\\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect \\\" for=\\\"checkbox-1\\\">\\r\\n            <input type=\\\"checkbox\\\" id=\\\"checkbox-1\\\" class=\\\"mdl-checkbox__input\\\" formControlName=\\\"eq20\\\">\\r\\n            <span class=\\\"mat-small\\\">20'</span>\\r\\n          </label>\\r\\n          <label class=\\\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect\\\" for=\\\"checkbox-2\\\">\\r\\n            <input type=\\\"checkbox\\\" id=\\\"checkbox-2\\\" class=\\\"mdl-checkbox__input\\\" formControlName=\\\"eq40\\\">\\r\\n            <span class=\\\"mat-small\\\">40'</span>\\r\\n          </label>\\r\\n        </mat-grid-tile>\\r\\n\\r\\n        <mat-grid-tile colspan=\\\"4\\\">\\r\\n          <div class=\\\"mat-small\\\" style=\\\"margin-bottom: 10px; margin-top: 11px; \\\"> EQ Group:\\r\\n            <select formControlName=\\\"equipmentType\\\" class=\\\"mdl-color-text--light-blue-900\\\"\\r\\n                    style=\\\"width: 100px; \\\">\\r\\n              <option class=\\\"mdl-color-text--light-blue-900\\\" *ngFor=\\\"let e of equipmentTypes\\\" [value]=\\\"e\\\">{{e}}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </mat-grid-tile>\\r\\n\\r\\n      </mat-grid-list>\\r\\n    </div>\\r\\n\\r\\n    <!--- Weight Class -->\\r\\n    <div style=\\\"border-width: 2px; border-color: #337DA8; border-style: solid;  margin: 5px; \\\">\\r\\n      <mat-form-field style=\\\"width: 150px; margin-left: 20px; margin-right: 20px; \\\">\\r\\n        <input matInput placeholder=\\\"Gross Weight 20' (Tons)\\\"\\r\\n               formControlName=\\\"weight20\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field style=\\\"width: 150px; margin-left: 20px;\\\">\\r\\n        <input matInput placeholder=\\\"Gross Weight 40' (Tons)\\\"\\r\\n               formControlName=\\\"weight40\\\">\\r\\n      </mat-form-field>\\r\\n      <label class=\\\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect\\\" style=\\\"margin-left: 20px;\\\"\\r\\n             for=\\\"weigh-based-only\\\">\\r\\n        <input type=\\\"checkbox\\\" id=\\\"weigh-based-only\\\" class=\\\"mdl-checkbox__input\\\" formControlName=\\\"weightBasedOnly\\\">\\r\\n        <span class=\\\"mat-small\\\">Weight Based Only</span>\\r\\n      </label>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div style=\\\"border-width: 2px; border-color: #337DA8; border-style: solid;  margin: 5px; padding: 10px; \\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"toggle()\\\">{{button_name}}</button>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"reset()\\\">Reset</button>\\r\\n    <button mat-raised-button type=”submit” [disabled]=\\\"isInvalid()\\\">\\r\\n      <mat-icon>search</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n<div *ngIf=\\\"keyFigures.length > 0\\\">\\r\\n  <app-result-intermodal [keyFigures]=\\\"keyFigures\\\"></app-result-intermodal>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {EquipmentGroup, EquipmentSize, GeoScopeType, IntermodalMode} from '../../enums/enum.index';\r\nimport {EnumService} from '../../services/enum.service';\r\n\r\nimport {AbstractControl, Validators} from '@angular/forms';\r\n\r\nimport {debounceTime, distinctUntilChanged, filter} from 'rxjs/operators';\r\n\r\nimport {GeoScopeService} from '../../services/geoscope.service';\r\nimport {GeoScopeModel} from '../../model/geoscope.model';\r\nimport {CountryModel} from '../../model/country.model';\r\nimport {IntermodalSearchService} from '../services/im.search.service';\r\nimport {KeyFigureModel} from '../models/keyfigure.model';\r\nimport {CountryService} from '../../services/country.service';\r\nimport {IntermodalSearchReactiveForm} from './search-intermodal.component.form';\r\n\r\n@Component({\r\n  selector: 'app-search-intermodal',\r\n  templateUrl: './search-intermodal.component.html',\r\n  styleUrls: ['./search-intermodal.component.css']\r\n})\r\nexport class SearchIntermodalComponent {\r\n\r\n  title = 'Search Key Figures';\r\n  isCollapsed = true;\r\n  button_name = 'Hide Form'\r\n  showSpinner = false;\r\n  isActive = false;\r\n  equipmentSizes: Array<string>;\r\n  equipmentTypes: Array<string>;\r\n  transportModes: Array<string>;\r\n  geoScopeTypes: Array<string>;\r\n  formClass: IntermodalSearchReactiveForm;\r\n  filteredInlandGeoScopes: GeoScopeModel[] = [];\r\n  filteredPortGeoScopes: GeoScopeModel[] = [];\r\n  filteredCountries: Array<CountryModel> = [];\r\n  keyFigures: Array<KeyFigureModel> = [];\r\n\r\n  constructor(private enumService: EnumService, private countryService: CountryService,\r\n              private masterDataService: GeoScopeService, private searchService: IntermodalSearchService) {\r\n\r\n    this.equipmentSizes = this.enumService.getEnumValues(EquipmentSize);\r\n    this.equipmentTypes = this.enumService.getEnumKeys(EquipmentGroup);\r\n    this.geoScopeTypes = this.enumService.getEnumValues(GeoScopeType);\r\n    this.transportModes = this.enumService.getEnumValues(IntermodalMode);\r\n    this.formClass = new IntermodalSearchReactiveForm();\r\n    // set default values in form\r\n    this.patchDefaultValues();\r\n\r\n    // event handler\r\n    this.onInlandLocationChanges(this.formClass.inlandLocation);\r\n    this.onCountryCodeChanges(this.formClass.countryCode);\r\n    this.onPortLocationChanges(this.formClass.prefPort);\r\n    this.onStartDateChanges(this.formClass.startDate);\r\n    this.onInlandGeoScopeChanges(this.formClass.inlandGeoScopeType);\r\n    this.onIncludeAllPreferredPorts(this.formClass.includeAllPreferredPorts);\r\n  }\r\n\r\n  get form() {\r\n    return this.formClass.searchIntermodalForm;\r\n  }\r\n\r\n\r\n  isCountryDisplayed() {\r\n    return this.formClass.inlandGeoScopeType.value === 'T' || this.formClass.inlandGeoScopeType.value === 'P';\r\n  }\r\n\r\n  eqSizeSelected() {\r\n    return this.formClass.eqSize20.value === true || this.formClass.eqSize40.value === true;\r\n  }\r\n\r\n  allPortsSelected() {\r\n    return this.formClass.includeAllPreferredPorts.value === true;\r\n\r\n  }\r\n\r\n  toggle() {\r\n    this.isCollapsed = !this.isCollapsed;\r\n\r\n    // CHANGE THE TEXT OF THE BUTTON.\r\n    if (this.isCollapsed) {\r\n      this.button_name = 'Hide Form';\r\n    } else {\r\n      this.button_name = 'Show Form';\r\n    }\r\n  }\r\n\r\n  isInvalid() {\r\n    return this.form.invalid;\r\n  }\r\n\r\n\r\n  filterKeyFigures() {\r\n    this.searchService.getKeyFigures(this.form.value).subscribe(result => {\r\n      if (result && result.length > 0) {\r\n        this.keyFigures = result;\r\n        this.toggle();\r\n      }\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.patchDefaultValues();\r\n    this.setEndDate(this.formClass.startDate.value);\r\n    this.filteredPortGeoScopes = [];\r\n    this.filteredInlandGeoScopes = [];\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {AbstractControl} control\r\n   */\r\n  private onInlandLocationChanges(control: AbstractControl) {\r\n    console.log('onInlandLocationChanges:' + control.value);\r\n    const locationObserver = {\r\n      next: data => {\r\n        const theLength: number = data.toString().trim().length;\r\n        if (theLength === 0) {\r\n          this.filteredInlandGeoScopes = [];\r\n          this.filteredPortGeoScopes = [];\r\n          this.formClass.inlandLocation.markAsPristine();\r\n          return;\r\n        }\r\n        if (theLength <= this.determineMinInputLength()) {\r\n          this.filteredInlandGeoScopes = [];\r\n          this.filteredPortGeoScopes = [];\r\n          return;\r\n        }\r\n        this.filterLocations(data, this.formClass.inlandGeoScopeType.value, this.formClass.countryCode.value);\r\n\r\n      },\r\n      error: err => console.error('Observer got an error: ' + err),\r\n    };\r\n\r\n    control.valueChanges\r\n      .pipe(debounceTime(300),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(locationObserver);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} location\r\n   * @param {string} type\r\n   * @param {string} country\r\n   * @returns {any}\r\n   */\r\n  filterLocations(location: string, type: string, country: string): any {\r\n    this.masterDataService.filterImLocations(location, type, country).subscribe(\r\n      result => {\r\n\r\n        console.log('result:' + JSON.stringify(result));\r\n        if (result.length === 1) {\r\n          const singleRow: string = result[0].locationCode;\r\n          this.formClass.inlandLocation.patchValue(singleRow.toUpperCase());\r\n          this.filteredInlandGeoScopes = [];\r\n          this.filteredPortGeoScopes = [];\r\n          console.log('single:' + JSON.stringify(this.formClass.inlandLocation.value));\r\n          this.retrievePreferredPorts();\r\n        } else if (result.length <= 1) {\r\n          this.retrievePreferredPorts();\r\n        } else {\r\n          this.filteredInlandGeoScopes = result;\r\n        }\r\n        return result;\r\n      });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {AbstractControl} control\r\n   */\r\n\r\n  private onCountryCodeChanges(control: AbstractControl) {\r\n    console.log('onCountryCodeChanges for value:', control.value);\r\n    control.valueChanges.pipe(\r\n      debounceTime<string>(400),\r\n      distinctUntilChanged(),\r\n      filter(data => data.toString().length > 0)\r\n    )\r\n      .subscribe(data => this.filterCountries(data)\r\n      );\r\n  }\r\n\r\n\r\n  filterCountries(countryCode) {\r\n    console.log('filterCountries for:', countryCode);\r\n    const countryObserver = {\r\n      next: result => {\r\n        if (result.length === 1) {\r\n          this.formClass.countryCode.patchValue(result[0].code);\r\n          this.filteredCountries = [];\r\n        } else {\r\n          this.filteredCountries = result;\r\n        }\r\n      },\r\n      error: err => console.error('Observer got an error: ' + err),\r\n      complete: () => console.log('finished'),\r\n    };\r\n\r\n    this.countryService.filterCountryCode(countryCode).subscribe(countryObserver);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {AbstractControl} control\r\n   */\r\n  private onInlandGeoScopeChanges(control: AbstractControl) {\r\n    console.log('onInlandGeoScopeChanges:' + control.value);\r\n    const geoScopeObserver = {\r\n      next: data => {\r\n        if (data === 'T' || data === 'P') {\r\n          this.formClass.countryCode.setValidators(\r\n            [Validators.required]\r\n          );\r\n          this.formClass.countryCode.markAsTouched({onlySelf: true});\r\n        } else {\r\n          this.formClass.countryCode.patchValue('');\r\n          this.formClass.countryCode.setValidators([]);\r\n        }\r\n        this.formClass.countryCode.updateValueAndValidity({onlySelf: true, emitEvent: true});\r\n        this.formClass.inlandLocation.patchValue('');\r\n      },\r\n      error: err => console.error('Observer got an error: ' + err),\r\n    };\r\n    console.log('onInlandGeoScopeChanges: before ');\r\n\r\n    control.valueChanges\r\n      .pipe(\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(geoScopeObserver);\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {AbstractControl} control\r\n   */\r\n  private onPortLocationChanges(control: AbstractControl) {\r\n    control.valueChanges\r\n      .subscribe(data => {\r\n        this.filteredPortGeoScopes = [];\r\n        this.retrievePreferredPorts();\r\n      });\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  private retrievePreferredPorts() {\r\n    this.masterDataService.filterPortLocations(this.formClass.inlandLocation.value).subscribe(\r\n      result => {\r\n        console.log('result:' + JSON.stringify(result));\r\n        if (result.length === 1) {\r\n          const singleRow: string = result[0].locationCode;\r\n          this.formClass.prefPort.patchValue(singleRow.toUpperCase());\r\n          this.filteredPortGeoScopes = [];\r\n        } else {\r\n          this.filteredPortGeoScopes = result;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {AbstractControl} control\r\n   */\r\n  private onIncludeAllPreferredPorts(control: AbstractControl) {\r\n    control.valueChanges\r\n      .pipe(\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(data => {\r\n        if (data) {\r\n          this.retrievePreferredPorts();\r\n        }\r\n      });\r\n  }\r\n\r\n  private onStartDateChanges(control: AbstractControl | any) {\r\n    control.valueChanges.pipe(distinctUntilChanged()).subscribe(data => {\r\n      this.formClass.startDate.patchValue(new Date(data).toISOString());\r\n      this.setEndDate(new Date(data));\r\n    });\r\n  }\r\n\r\n  private setEndDate(date: Date) {\r\n    const newDay: number = ( date.getDate() + 14);\r\n    const newDate: Date = new Date();\r\n    newDate.setDate(newDay);\r\n    this.formClass.endDate.patchValue(newDate.toISOString());\r\n  }\r\n\r\n  private patchDefaultValues() {\r\n    this.formClass.includeKeyFigure.patchValue(true);\r\n    this.formClass.includeImTariff.patchValue(false);\r\n    this.formClass.includeImSchdeule.patchValue(false);\r\n    this.formClass.eqSize20.patchValue(true);\r\n    this.formClass.eqSize40.patchValue(true);\r\n    this.formClass.preOnCarriage.patchValue('true');\r\n    this.formClass.eqType.patchValue('GENERAL');\r\n    this.formClass.transportMode.patchValue('ALL');\r\n    this.formClass.inlandLocation.patchValue('');\r\n    this.formClass.prefPort.patchValue('');\r\n    this.formClass.inlandGeoScopeType.patchValue('L');\r\n    this.formClass.includeAllPreferredPorts.patchValue(true);\r\n    this.formClass.startDate.patchValue(new Date().toISOString());\r\n    this.setEndDate(new Date(this.formClass.startDate.value));\r\n\r\n    this.formClass.includeKeyFigure.disable({onlySelf: true, emitEvent: false});\r\n    this.formClass.weight20.patchValue('');\r\n    this.formClass.weight40.patchValue('');\r\n    this.formClass.weigthBasedOnly.patchValue(false);\r\n\r\n  }\r\n\r\n  private determineMinInputLength(): number {\r\n    let length = 1;\r\n    let type: string;\r\n    type = this.enumService.getKeyByValue(GeoScopeType, this.formClass.inlandGeoScopeType.value);\r\n    switch (type) {\r\n      case 'LOCATION':\r\n        length = 2;\r\n        break;\r\n      case 'CITY':\r\n        length = 2;\r\n        break;\r\n      case 'FACILITY':\r\n        length = 4;\r\n        break;\r\n      case 'POSTAL_CODE':\r\n        length = 3;\r\n        break;\r\n\r\n      default:\r\n\r\n    }\r\n    return length;\r\n  }\r\n\r\n}\r\n","/**\r\n * Created by ekirschning on 10.04.2017.\r\n */\r\n\r\nimport {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {EntityEnum} from '../../enums/app-enum';\r\nimport {KeyFigureModel} from '../models/keyfigure.model';\r\nimport {Observable} from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class IntermodalSearchService {\r\n\r\n  readonly serverApi = 'http://localhost:8080/nre';\r\n\r\n  private resource = '/';\r\n  private objectType = EntityEnum.INTERMODAL_RESULT;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n\r\n  private static getHeader(): HttpHeaders {\r\n    return new HttpHeaders().set('Content-Type', 'application/json');\r\n  }\r\n\r\n\r\n  private getUrl(): string {\r\n    return this.serverApi + this.resource + this.objectType + this.resource;\r\n  }\r\n\r\n  getKeyFigures(imSearchModel: object): Observable<Array<KeyFigureModel>> {\r\n    console.log('#filter key figures in service');\r\n    const search_params: HttpParams = this.prepareSearchParams(imSearchModel);\r\n    console.log('#search params' + JSON.stringify(search_params));\r\n\r\n    const URI = this.getUrl() + 'filter/';\r\n    return this.http.get<Array<KeyFigureModel>>(URI, {params: search_params});\r\n\r\n  }\r\n\r\n  private prepareSearchParams(imSearchModel: Object) {\r\n    console.log('startDate...');\r\n    console.log('#: ' + JSON.stringify(imSearchModel['startDate']));\r\n    console.log('.....startDate');\r\n    const search_params = new HttpParams()\r\n      .set('isPreCarriage', imSearchModel['preOnCarriage'])\r\n      .set('includeImTariff', imSearchModel['includeImTariff'])\r\n      .set('includeImSchedule', imSearchModel['includeImSchedule'])\r\n      .set('inlandLocation', imSearchModel['inlandLocation'])\r\n      .set('inlandGeoScopeType', imSearchModel['inlandGeoScopeType'])\r\n      .set('countryCode', imSearchModel['countryCode'])\r\n      .set('portLocation', imSearchModel['prefPort'])\r\n      .set('includeAllPrefPorts', imSearchModel['includeAllPreferredPorts'])\r\n      .set('transportMode', imSearchModel['transportMode'])\r\n      .set('equipmentType', imSearchModel['equipmentType'])\r\n      .set('eq20', imSearchModel['eq20'])\r\n      .set('eq40', imSearchModel['eq40'])\r\n      .set('eqHC', imSearchModel['eqHC'])\r\n      .set('weight20', imSearchModel['weight20'])\r\n      .set('weight40', imSearchModel['weight40'])\r\n      .set('weightBasedOnly', imSearchModel['weightBasedOnly'])\r\n      .set('startDate', imSearchModel['startDate'].toString().substring(0, 10))\r\n      .set('endDate', imSearchModel['endDate'].toString().substring(0, 10));\r\n    return search_params;\r\n  }\r\n\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {CommonModule} from '@angular/common';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\nimport {AppMaterialModule} from '../app-material.module';\r\n\r\nimport {SearchRoutesComponent} from './missing-routes.search.component/search-routes.component';\r\nimport {RoutesRoutingModule} from './missing-routes.routing.module';\r\n\r\nimport {EnumService} from '../services/enum.service';\r\nimport {MissingRoutesResultComponent} from './missing-routes.result.component/masterdata-routes.component';\r\nimport {RoutesSearchService} from './services/routes.search.service';\r\n\r\n@NgModule({\r\n\r\n  declarations: [MissingRoutesResultComponent, SearchRoutesComponent],\r\n\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RoutesRoutingModule,\r\n    AppMaterialModule\r\n  ],\r\n\r\n  providers: [RoutesSearchService, EnumService],\r\n\r\n})\r\nexport class MissingRoutingsModule {\r\n}\r\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  min-width: 300px;\\r\\n}\\r\\n\\r\\n.example-header {\\r\\n  min-height: 64px;\\r\\n  padding: 8px 24px 0;\\r\\n}\\r\\n\\r\\n.mat-table {\\r\\n  overflow: auto;\\r\\n  max-height: 500px;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-header-cell.mat-sort-header-sorted {\\r\\n  color: black;\\r\\n}\\r\\n\\r\\nmat-row:nth-child(even) {\\r\\n  background-color: #ecf4ff;;\\r\\n}\\r\\n\\r\\nmat-row:nth-child(odd) {\\r\\n  background-color: #ecf4dd;;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-container mat-elevation-z8\\\">\\r\\n  <div class=\\\"example-header\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <mat-table #table [dataSource]=\\\"dataSource\\\" matSort matSort matSortDirection=\\\"asc\\\">\\r\\n    <!--    displayedColumns = ['trade', 'pol', 'pod', 'ts1', 'ts2', 'ts3', '_contractno', '_productno', '_reasoncode'];\\r\\n    -->\\r\\n    <!-- Trade Column -->\\r\\n    <ng-container matColumnDef=\\\"trade\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>trade</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.trade}}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- POL Column -->\\r\\n    <ng-container matColumnDef=\\\"pol\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>POL</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.pol}}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- POD Column -->\\r\\n    <ng-container matColumnDef=\\\"pod\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>POD</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element \\\"> {{element.pod}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <!-- ts1 Column -->\\r\\n    <ng-container matColumnDef=\\\"ts1\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>T/S 1</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.ts1}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <!-- ts2 Column -->\\r\\n    <ng-container matColumnDef=\\\"ts2\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>T/S 2</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.ts2}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <!-- ts3 Column -->\\r\\n    <ng-container matColumnDef=\\\"ts3\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>T/S 3</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.ts3}}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Contract Column -->\\r\\n    <ng-container matColumnDef=\\\"contractno\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Contract</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.contractno }}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Product no Column -->\\r\\n    <ng-container matColumnDef=\\\"productno\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Product No</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.productno}}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Partner code Column -->\\r\\n    <ng-container matColumnDef=\\\"partnercode\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Partner Code</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.partnercode}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <!-- Reson code -->\\r\\n    <ng-container matColumnDef=\\\"reasoncode\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Error Code</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.reasoncode}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n  </mat-table>\\r\\n\\r\\n  <mat-paginator #paginator\\r\\n                 [pageSize]=\\\"5\\\"\\r\\n                 [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\r\\n                 [showFirstLastButtons]=\\\"true\\\">\\r\\n  </mat-paginator>\\r\\n</div>\\r\\n\"","import {AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\r\n\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport {MissingRoutingModel} from '../models/missing-routing.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-result-routes',\r\n  templateUrl: './masterdata-routes.component.html',\r\n  styleUrls: ['./masterdata-routes.component.css']\r\n})\r\nexport class MissingRoutesResultComponent implements OnInit, AfterViewInit, OnChanges {\r\n\r\n  @Input()\r\n  routings: Array<MissingRoutingModel> = [];\r\n\r\n  displayedColumns = ['trade', 'pol', 'pod', 'ts1', 'ts2', 'ts3', 'contractno', 'productno', 'partnercode', 'reasoncode'];\r\n  dataSource: any;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n\r\n  /**\r\n   * Set the sort after the view init since this component will\r\n   * be able to query its view for the initialized sort.\r\n   */\r\n  ngAfterViewInit() {\r\n    console.log('after view init');\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('init');\r\n\r\n  }\r\n\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log('on changes' + JSON.stringify(changes));\r\n    this.dataSource = new MatTableDataSource(this.routings);\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {SearchRoutesComponent} from './missing-routes.search.component/search-routes.component';\r\n\r\nexport const routes: Routes = [\r\n  {path: 'searchRoutes', component: SearchRoutesComponent}\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n      RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n\r\n  }\r\n)\r\n\r\nexport class RoutesRoutingModule {\r\n}\r\n","module.exports = \"\\r\\n.form-style-9 {\\r\\n  max-width: 400px;\\r\\n  background: #FAFAFA;\\r\\n  padding: 10px;\\r\\n  margin: 20px auto;\\r\\n  box-shadow: 1px 1px 25px rgba(0, 0, 0, 0.35);\\r\\n  border-radius: 10px;\\r\\n  border: 2px solid #305A72;\\r\\n}\\r\\n\\r\\n.smallFont {\\r\\n  font: 400 12px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\r\\n}\\r\\n\\r\\n.serviceType {\\r\\n  font: 400 12px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\r\\n  margin: 5px 0px 10px 15px;\\r\\n}\\r\\n\\r\\n.floatLeft {\\r\\n  float: left;\\r\\n  padding: 1px 1px 1px 1px;\\r\\n  margin: 1px 1px 1px 1px;\\r\\n  font-weight: bold;\\r\\n  color: #13557b;\\r\\n  height: 4px;\\r\\n  line-height: 0px;\\r\\n}\\r\\n\\r\\n/* ml */\\r\\n\\r\\n.stopFloat {\\r\\n  display: block;\\r\\n  float: none;\\r\\n  clear: both;\\r\\n  height: 0px; /* 1px, wenn kleine Linie bleiben soll */\\r\\n  font-size: 0px;\\r\\n  line-height: 0px;\\r\\n  background: #ffffff;\\r\\n}\\r\\n\\r\\nselect:hover {\\r\\n  background: rgba(0, 0, 0, 0);\\r\\n  color: #3a7999;\\r\\n}\\r\\n\\r\\n.tooltip {\\r\\n  position: relative;\\r\\n  display: inline-block;\\r\\n  border-bottom: 1px dotted black; /* If you want dots under the hoverable text */\\r\\n  visibility: hidden;\\r\\n  width: 120px;\\r\\n  background-color: black;\\r\\n  color: #fff;\\r\\n  text-align: center;\\r\\n  padding: 5px 0;\\r\\n  border-radius: 6px;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n/* Show the tooltip text when you mouse over the tooltip container */\\r\\n\\r\\n.tooltip:hover {\\r\\n  visibility: visible;\\r\\n}\\r\\n\\r\\n.isHidden {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.isShown {\\r\\n  display: inherit;\\r\\n}\\r\\n\"","module.exports = \"<p>Form value: {{ form.value | json }}</p>\\r\\n<p>Form status: {{ form.status | json }}</p>\\r\\n\\r\\n<form class=\\\"form-style-9 mdl-color-text--light-blue-900\\\" style=\\\"background: #ecf4ff;\\\"\\r\\n      [formGroup]=\\\"form\\\"\\r\\n      novalidate (ngSubmit)=\\\"filterMissingRoutes()\\\">\\r\\n  <div id=\\\"im-search-form\\\" style=\\\"text-align: center;font-weight: bold;\\\">\\r\\n    {{ title }}\\r\\n\\r\\n    <ng-template #noResult>\\r\\n      No results found.\\r\\n    </ng-template>\\r\\n    <div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <mat-spinner [style.display]=\\\"showSpinner ? 'block' :'none'\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n  <!--  Rules -->\\r\\n  <div *ngIf=\\\"isCollapsed\\\">\\r\\n    <div style=\\\"border-width: 2px; border-color: #337DA8; border-style: solid; padding:5px; margin: 5px; \\\">\\r\\n      <!--- Trade -->\\r\\n      <mat-form-field style=\\\"width: 150px; margin-left: 20px; margin-right: 20px;\\\">\\r\\n        <input matInput #tradeMessage maxlength=\\\"5\\\" placeholder=\\\"Trade\\\" formControlName=\\\"trade\\\"\\r\\n               [matAutocomplete]=\\\"trade\\\">\\r\\n        <mat-hint align=\\\"start\\\"> e.g. EANEU, EACCA</mat-hint>\\r\\n        <mat-hint align=\\\"end\\\">{{tradeMessage.value.length}} / 5</mat-hint>\\r\\n\\r\\n        <mat-autocomplete #trade=\\\"matAutocomplete\\\">\\r\\n          <mat-option *ngFor=\\\"let item of possibleTrades\\\" [value]=\\\"item.trade_code\\\"\\r\\n                      style=\\\"height: 30px; line-height: 20px; background-color: #ecf4ff;\\\">\\r\\n            <span class=\\\"smallFont\\\"> {{ item.trade_code }}</span>\\r\\n          </mat-option>\\r\\n        </mat-autocomplete>\\r\\n      </mat-form-field>\\r\\n      <!--- Contract -->\\r\\n    </div>\\r\\n    <div style=\\\"border-width: 2px; border-color: #337DA8; border-style: solid; padding:5px; margin: 5px; \\\">\\r\\n      <div *ngIf=\\\" searchSingleContract()\\\">\\r\\n        <mat-form-field style=\\\"width: 150px; margin-left: 20px; margin-right: 20px;\\\">\\r\\n          <input matInput placeholder=\\\"Agreement No\\\" formControlName=\\\"contract\\\" [matAutocomplete]=\\\"contract\\\">\\r\\n          <mat-autocomplete #contract=\\\"matAutocomplete\\\">\\r\\n            <mat-option *ngFor=\\\"let contract of possibleContracts\\\" [value]=\\\"contract.no\\\"\\r\\n                        style=\\\"height: 30px; line-height: 20px; background-color: #ecf4ff;\\\">\\r\\n              <span class=\\\"smallFont\\\"> {{ contract.no }}</span>\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"! searchSingleContract()\\\">\\r\\n        <mat-form-field style=\\\"width: 150px; margin-left: 20px; margin-right: 20px;\\\">\\r\\n          <input matInput formControlName=\\\"contractGroup\\\" #message maxlength=\\\"5\\\" placeholder=\\\"Agreement No Group\\\"\\r\\n                 [matAutocomplete]=\\\"contractGroup\\\">\\r\\n          <mat-hint align=\\\"start\\\"> e.g. ANCC5, ANCC7</mat-hint>\\r\\n          <mat-hint align=\\\"end\\\">{{message.value.length}} / 5</mat-hint>\\r\\n          <mat-autocomplete #contractGroup=\\\"matAutocomplete\\\">\\r\\n            <mat-option *ngFor=\\\"let contractGroup of possibleContractGroups\\\" [value]=\\\"contractGroup.no\\\"\\r\\n                        style=\\\"height: 30px; line-height: 20px; background-color: #ecf4ff;\\\">\\r\\n              <span class=\\\"smallFont\\\"> {{ contractGroup.no }}</span>\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div style=\\\" padding:5px; margin: 5px;\\\">\\r\\n        <label class=\\\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect \\\" for=\\\"includeAll\\\">\\r\\n          <input type=\\\"checkbox\\\" id=\\\"includeAll\\\" class=\\\"mdl-checkbox__input\\\" formControlName=\\\"singleContractOnly\\\">\\r\\n          <span class=\\\"mat-small\\\">One Single Contract Only</span>\\r\\n        </label>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div style=\\\"border-width: 2px; border-color: #337DA8; border-style: solid; padding:5px; margin: 5px; \\\">\\r\\n      <!--- Port of Loading -->\\r\\n      <div *ngIf=\\\"! byCountry()\\\">\\r\\n\\r\\n        <mat-form-field style=\\\"width: 150px; margin-left: 20px; margin-right: 20px;\\\">\\r\\n          <input matInput #polMessage maxlength=\\\"3\\\" placeholder=\\\"Port of Loading\\\" formControlName=\\\"portOfLoading\\\"\\r\\n                 [matAutocomplete]=\\\"autoFrom\\\">\\r\\n          <mat-hint align=\\\"start\\\">starts with: e.g. CNC</mat-hint>\\r\\n          <mat-hint align=\\\"end\\\">{{polMessage.value.length}} / 3</mat-hint>\\r\\n\\r\\n          <mat-autocomplete #autoFrom=\\\"matAutocomplete\\\">\\r\\n            <mat-option *ngFor=\\\"let item of possiblePOLs\\\" [value]=\\\"item.locationCode\\\"\\r\\n                        style=\\\"height: 30px; line-height: 20px; background-color: #ecf4ff;\\\">\\r\\n              <span class=\\\"smallFont\\\"> {{ item.locationCode }}</span>\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <!--- Port of Destination -->\\r\\n      <div *ngIf=\\\" byCountry()\\\">\\r\\n\\r\\n        <mat-form-field style=\\\"width: 100px; margin-left: 20px; margin-right: 20px;\\\">\\r\\n          <input matInput placeholder=\\\"POL-Country\\\" formControlName=\\\"countryCode\\\" [matAutocomplete]=\\\"autoCountry\\\">\\r\\n          <mat-hint align=\\\"start\\\">e.g. DE, CN</mat-hint>\\r\\n\\r\\n          <mat-autocomplete #autoCountry=\\\"matAutocomplete\\\">\\r\\n            <mat-option *ngFor=\\\"let country of possibleCountries\\\" [value]=\\\"country.country_code\\\"\\r\\n                        style=\\\"height: 30px; line-height: 20px;\\\">\\r\\n              <span class=\\\"smallFont\\\"> {{ country.country_code }}</span>\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div style=\\\" padding:5px; margin: 5px;\\\">\\r\\n        <label class=\\\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect \\\" for=\\\"byCountryCode\\\">\\r\\n          <input type=\\\"checkbox\\\" id=\\\"byCountryCode\\\" class=\\\"mdl-checkbox__input\\\" formControlName=\\\"byCountryCode\\\">\\r\\n          <span class=\\\"mat-small\\\">POL by Country Code</span>\\r\\n        </label>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div style=\\\"border-width: 2px; border-color: #337DA8; border-style: solid;  margin: 5px; padding: 10px; \\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"toggle()\\\">{{button_name}}</button>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"reset()\\\">Reset</button>\\r\\n    <button mat-raised-button type=submit [disabled]=\\\"isInvalid()\\\">\\r\\n      <mat-icon>search</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<div *ngIf=\\\"routes.length > 0; else noResult\\\">\\r\\n  <app-result-routes [routings]=\\\"routes\\\"></app-result-routes>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, OnChanges, OnInit, SimpleChanges} from '@angular/core';\r\nimport {EnumService} from '../../services/enum.service';\r\n\r\nimport {AbstractControl, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {GeoScopeService} from '../../services/geoscope.service';\r\n\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\nimport {RoutesSearchService} from '../services/routes.search.service';\r\nimport {GeoScopeModel} from '../../model/geoscope.model';\r\nimport {TradeModel} from '../../model/trade.model';\r\nimport {MissingRoutingModel} from '../models/missing-routing.model';\r\nimport {ContractModel} from '../../model/contract.model';\r\nimport {CountryModel} from '../../model/country.model';\r\nimport {CountryService} from '../../services/country.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search-ocean-routes',\r\n  templateUrl: './search-routes.component.html',\r\n  styleUrls: ['./search-routes.component.css']\r\n})\r\nexport class SearchRoutesComponent implements OnInit, OnChanges {\r\n\r\n  title = 'COQU Missing Routes';\r\n  isCollapsed = true;\r\n  button_name = 'Hide Form';\r\n  showSpinner = false;\r\n  isActive = false;\r\n  routes: Array<MissingRoutingModel> = [];\r\n\r\n  searchFormOceanRoutes: FormGroup;\r\n  possiblePOLs: GeoScopeModel[] = [];\r\n  possibleTrades: TradeModel[] = [];\r\n  possibleContracts: ContractModel[] = [];\r\n  possibleContractGroups: ContractModel[] = [];\r\n  possibleCountries: Array<CountryModel> = [];\r\n\r\n\r\n  constructor(private enumService: EnumService, private countryService: CountryService,\r\n              private masterDataService: GeoScopeService, private searchService: RoutesSearchService) {\r\n    console.log('constructor');\r\n\r\n\r\n    this.searchFormOceanRoutes = new FormGroup({\r\n      trade: new FormControl(''),\r\n      contract: new FormControl(''),\r\n      singleContractOnly: new FormControl(false),\r\n      contractGroup: new FormControl('', Validators.required),\r\n      portOfLoading: new FormControl(''),\r\n      countryCode: new FormControl(''),\r\n      byCountryCode: new FormControl(true)\r\n\r\n    });\r\n\r\n    // set default values in form\r\n    this.patchDefaultValues();\r\n\r\n    // event handler\r\n    this.onTradeChanges(this.trade);\r\n    this.onContractChanges(this.contract);\r\n    this.onContractGroupChanges(this.contractGroup);\r\n\r\n    this.onSingleContractOnly(this.singleContractOnly);\r\n    this.onPortOfLoadingChanges(this.portOfLoading);\r\n\r\n    this.onCountryCodeChanges(this.countryCode);\r\n\r\n  }\r\n\r\n  get form() {\r\n    return this.searchFormOceanRoutes;\r\n  }\r\n\r\n\r\n  get trade() {\r\n    return this.form.get('trade');\r\n  }\r\n\r\n  get contract() {\r\n    return this.form.get('contract');\r\n  }\r\n\r\n  get contractGroup() {\r\n    return this.form.get('contractGroup');\r\n  }\r\n\r\n  get portOfLoading() {\r\n    return this.form.get('portOfLoading');\r\n  }\r\n\r\n  get singleContractOnly() {\r\n    return this.form.get('singleContractOnly');\r\n  }\r\n\r\n  get countryCode() {\r\n    return this.form.get('countryCode');\r\n  }\r\n\r\n  get byCountryCode() {\r\n    return this.form.get('byCountryCode');\r\n  }\r\n\r\n\r\n  toggle() {\r\n    this.isCollapsed = !this.isCollapsed;\r\n\r\n    // CHANGE THE TEXT OF THE BUTTON.\r\n    if (this.isCollapsed) {\r\n      this.button_name = 'Hide Form';\r\n    } else {\r\n      this.button_name = 'Show Form';\r\n    }\r\n  }\r\n\r\n  isInvalid() {\r\n    return this.form.invalid;\r\n  }\r\n\r\n\r\n  filterMissingRoutes() {\r\n    console.log('filter ocean routes');\r\n    this.showSpinner = false;\r\n    this.routes = [];\r\n    this.searchService.getRoutings(this.form.value).subscribe(result => {\r\n      console.log('routings: ' + JSON.stringify(result));\r\n      if (result && result.length > 0) {\r\n        this.routes = result;\r\n        this.toggle();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  reset() {\r\n    this.patchDefaultValues();\r\n    this.possiblePOLs = [];\r\n    this.possibleContracts = [];\r\n    this.possibleContractGroups = [];\r\n    this.possibleTrades = [];\r\n\r\n  }\r\n\r\n\r\n  private onTradeChanges(control: AbstractControl) {\r\n    control.valueChanges\r\n\r\n\r\n      .pipe(debounceTime(400),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(data => {\r\n        const theLength: number = data.toString().trim().length;\r\n        if (theLength === 0) {\r\n          this.possibleTrades = [];\r\n          this.trade.markAsDirty();\r\n          return;\r\n        }\r\n        if (theLength < 2) {\r\n          this.possibleTrades = [];\r\n          return;\r\n        }\r\n\r\n        this.masterDataService.filterTrades(data).subscribe(\r\n          result => {\r\n\r\n            console.log('result:' + JSON.stringify(result));\r\n            if (result.length === 1) {\r\n              const singleRow: string = result[0].trade_code;\r\n              this.trade.patchValue(singleRow.toUpperCase());\r\n              console.log('single:' + JSON.stringify(this.trade.value));\r\n              this.trade.markAsUntouched();\r\n\r\n            } else {\r\n              this.possibleTrades = result;\r\n\r\n            }\r\n          });\r\n\r\n      });\r\n\r\n  }\r\n\r\n  private onPortOfLoadingChanges(control: AbstractControl) {\r\n    control.valueChanges\r\n      .pipe(debounceTime(400),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(data => {\r\n        const theLength: number = data.toString().trim().length;\r\n        if (theLength === 0) {\r\n          this.possiblePOLs = [];\r\n          this.portOfLoading.markAsDirty();\r\n          return;\r\n        }\r\n        if (theLength < 2) {\r\n          this.possiblePOLs = [];\r\n          return;\r\n        }\r\n\r\n        this.masterDataService.filterPorts(data).subscribe(\r\n          result => {\r\n            if (result.length === 0) {\r\n              this.portOfLoading.markAsTouched();\r\n\r\n            } else if (result.length === 1) {\r\n              const singleRow: string = result[0].locationCode;\r\n              this.portOfLoading.patchValue(singleRow.toUpperCase().substr(0, 3));\r\n              console.log('single:' + JSON.stringify(this.portOfLoading.value));\r\n              this.portOfLoading.markAsUntouched();\r\n\r\n            } else {\r\n              this.portOfLoading.markAsUntouched();\r\n\r\n              this.possiblePOLs = result;\r\n\r\n            }\r\n          });\r\n\r\n      });\r\n\r\n  }\r\n\r\n\r\n  private onCountryCodeChanges(control: AbstractControl) {\r\n    control.valueChanges\r\n      .pipe(debounceTime(400),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(data => {\r\n        if (data.toString().trim().length === 0) {\r\n          this.possibleCountries = [];\r\n          this.countryCode.markAsPristine();\r\n          return;\r\n        }\r\n        this.countryService.filterCountries(data).subscribe(\r\n          result => {\r\n            if (result.length === 1) {\r\n              this.countryCode.patchValue(result[0].code);\r\n              this.possibleCountries = [];\r\n            } else {\r\n              this.possibleCountries = result;\r\n            }\r\n          });\r\n      });\r\n\r\n  }\r\n\r\n\r\n  private onContractChanges(control: AbstractControl) {\r\n    control.valueChanges\r\n      .pipe(debounceTime(400),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(data => {\r\n        const theLength: number = data.toString().trim().length;\r\n        if (theLength === 0) {\r\n          this.possibleContracts = [];\r\n          this.contract.markAsDirty();\r\n          return;\r\n        }\r\n        if (theLength < 4) {\r\n          this.possibleContracts = [];\r\n          return;\r\n        }\r\n\r\n        this.masterDataService.filterContracts(data).subscribe(\r\n          result => {\r\n\r\n            console.log('result:' + JSON.stringify(result));\r\n            if (result.length === 1) {\r\n              const singleRow: string = result[0].no;\r\n              this.contract.patchValue(singleRow.toUpperCase());\r\n              console.log('single:' + JSON.stringify(this.contract.value));\r\n              this.possibleContracts = [];\r\n              this.contract.markAsUntouched();\r\n\r\n            } else {\r\n              this.possibleContracts = result;\r\n\r\n            }\r\n          });\r\n      });\r\n  }\r\n\r\n\r\n  private onContractGroupChanges(control: AbstractControl) {\r\n    control.valueChanges\r\n      .pipe(debounceTime(400),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(data => {\r\n        const theLength: number = data.toString().trim().length;\r\n        if (theLength === 0) {\r\n          this.possibleContractGroups = [];\r\n          this.contractGroup.markAsDirty();\r\n          return;\r\n        }\r\n        if (theLength < 4) {\r\n          this.possibleContractGroups = [];\r\n          return;\r\n        }\r\n\r\n        this.masterDataService.filterContractGroups(data).subscribe(\r\n          result => {\r\n\r\n            console.log('result:' + JSON.stringify(result));\r\n            if (result.length === 1) {\r\n              const singleRow: string = result[0].no;\r\n              this.contractGroup.patchValue(singleRow.toUpperCase());\r\n              console.log('single:' + JSON.stringify(this.contract.value));\r\n              this.possibleContractGroups = [];\r\n              this.contractGroup.markAsUntouched();\r\n            } else {\r\n              this.possibleContractGroups = result;\r\n            }\r\n          });\r\n      });\r\n  }\r\n\r\n  private onSingleContractOnly(control: AbstractControl) {\r\n    control.valueChanges\r\n      .pipe(\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(data => {\r\n        if (data) {\r\n          console.log('single contract only');\r\n          this.contractGroup.setValidators([]);\r\n          this.contract.setValidators(\r\n            [Validators.required]\r\n          );\r\n          this.contract.patchValue('');\r\n          this.contract.markAsDirty({onlySelf: true});\r\n          this.possibleContracts = [];\r\n        } else {\r\n          console.log('contract group');\r\n          this.contract.setValidators([]);\r\n          this.contractGroup.setValidators(\r\n            [Validators.required]\r\n          );\r\n          this.contractGroup.patchValue('');\r\n          this.contractGroup.markAsDirty({onlySelf: true});\r\n          this.possibleContractGroups = [];\r\n\r\n        }\r\n      });\r\n  }\r\n\r\n  searchSingleContract() {\r\n    return this.singleContractOnly.value === true;\r\n\r\n  }\r\n\r\n  byCountry() {\r\n    return this.byCountryCode.value === true;\r\n  }\r\n\r\n  private patchDefaultValues() {\r\n    this.trade.patchValue('');\r\n    this.portOfLoading.patchValue('');\r\n    this.contract.patchValue('');\r\n    this.contractGroup.patchValue('');\r\n    this.singleContractOnly.patchValue(false);\r\n    this.byCountryCode.patchValue(true);\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    console.log('init');\r\n\r\n  }\r\n\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log('on changes' + JSON.stringify(changes));\r\n  }\r\n\r\n\r\n}\r\n","/**\r\n * Created by ekirschning on 10.04.2017.\r\n */\r\n\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {ConfigService} from '../../services/config.service';\r\nimport {EntityEnum} from '../../enums/app-enum';\r\nimport {MissingRoutingModel} from '../models/missing-routing.model';\r\n\r\n\r\n@Injectable()\r\nexport class RoutesSearchService {\r\n  private serverApi = ConfigService.get('tomcat');\r\n  private resource = '/';\r\n  private objectType = EntityEnum.MISSING_ROUTINGS;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n\r\n  private static getHeader(): HttpHeaders {\r\n    return new HttpHeaders().set('Content-Type', 'application/json');\r\n  }\r\n\r\n\r\n  private getUrl(): string {\r\n    return this.serverApi + this.resource + this.objectType + this.resource;\r\n  }\r\n\r\n  getRoutings(imSearchModel: object): Observable<Array<MissingRoutingModel>> {\r\n    console.log('search model:' + JSON.stringify(imSearchModel));\r\n    console.log('typeof:' + typeof imSearchModel);\r\n    const search_params: HttpParams = this.prepareSearchParams(imSearchModel);\r\n\r\n    const URI = this.getUrl() + 'filter/';\r\n    return this.http.get<Array<MissingRoutingModel>>(URI, {params: search_params});\r\n\r\n  }\r\n\r\n  private prepareSearchParams(imSearchModel: Object) {\r\n    const search_params = new HttpParams()\r\n      .set('pol', imSearchModel['portOfLoading'])\r\n      .set('trade', imSearchModel['trade'])\r\n      .set('contract', imSearchModel['contract'])\r\n      .set('contractgroup', imSearchModel['contractGroup'])\r\n      .set('country', imSearchModel['countryCode'])\r\n    return search_params;\r\n  }\r\n}\r\n","export class CountryModel {\r\n  private _id?: number;\r\n  private _name: string;\r\n  private _code: string;\r\n\r\n\r\n  constructor(id: number, name: string, code: string) {\r\n    this._id = id;\r\n    this._name = name;\r\n    this._code = code;\r\n  }\r\n\r\n\r\n  get id(): number {\r\n    return this._id;\r\n  }\r\n\r\n\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  get code(): string {\r\n    return this._code;\r\n  }\r\n\r\n}\r\n","/**\r\n * Created by ekirschning on 27.01.2018.\r\n */\r\n\r\n\r\nexport class GeoScopeModel {\r\n  private _id?: number;\r\n  private _locationCode: string;\r\n  private _geoScopeType: string;\r\n  private _countryCode: string;\r\n\r\n  constructor(location_id: number, locationCode: string, geoscopeType: string , countryCode: string) {\r\n    this._locationCode = locationCode;\r\n    this._geoScopeType =geoscopeType;\r\n    this._countryCode =countryCode;\r\n  }\r\n\r\n\r\n  get locationCode(): string {\r\n    return this._locationCode;\r\n  }\r\n\r\n  get id(): number {\r\n    return this._id;\r\n  }\r\n\r\n  get geoScopeType(): string {\r\n    return this._geoScopeType;\r\n  }\r\n\r\n  get countryCode(): string {\r\n    return this._countryCode;\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\n\r\nimport {NewRoutingEngineComponent} from './nre.search.component/nre-search.component';\r\nimport {RoutesRoutingModule} from './new-routing-engine.routes.module';\r\n\r\nimport {EnumService} from '../services/enum.service';\r\nimport {NewRoutingeEngineResultComponent} from './nre.result.component/nre-result.component';\r\nimport {NewRoutesSearchService} from './services/new-routing-engine.search.service';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n\r\n  declarations: [NewRoutingeEngineResultComponent, NewRoutingEngineComponent],\r\n\r\n  imports: [SharedModule, RoutesRoutingModule],\r\n\r\n  providers: [NewRoutesSearchService, EnumService],\r\n\r\n})\r\nexport class NewRoutingEngineModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NewRoutingEngineComponent} from './nre.search.component/nre-search.component';\r\n\r\nexport const routes: Routes = [\r\n  {path: 'searchNewRoutes', component: NewRoutingEngineComponent}\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n      RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n\r\n  }\r\n)\r\n\r\nexport class RoutesRoutingModule {\r\n}\r\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  min-width: 300px;\\r\\n}\\r\\n\\r\\n.example-header {\\r\\n  min-height: 64px;\\r\\n  padding: 8px 24px 0;\\r\\n}\\r\\n\\r\\n.mat-table {\\r\\n  overflow: auto;\\r\\n  max-height: 500px;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-header-cell.mat-sort-header-sorted {\\r\\n  color: black;\\r\\n}\\r\\n\\r\\nmat-row:nth-child(even) {\\r\\n  background-color: #ecf4ff;;\\r\\n}\\r\\n\\r\\nmat-row:nth-child(odd) {\\r\\n  background-color: #ecf4dd;;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-container mat-elevation-z8\\\">\\r\\n  <div class=\\\"example-header\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <mat-table #table [dataSource]=\\\"dataSource\\\" matSort matSort matSortDirection=\\\"asc\\\">\\r\\n    <!--     displayedColumns = ['TT (days)', 'pol', 'pod', 'ts1', 'ts2', 'ts3', 'prof-1', 'prof-2', 'prof-3', 'errorcode'];\\r\\n\\r\\n    <!-- Transit time Column -->\\r\\n    <ng-container matColumnDef=\\\"tt\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>TT (days)</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.tt}}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- POL Column -->\\r\\n    <ng-container matColumnDef=\\\"pol\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>POL</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.pol}}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <!-- ts1 Column -->\\r\\n    <ng-container matColumnDef=\\\"ts1\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>T/S 1</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.ts1}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <!-- ts2 Column -->\\r\\n    <ng-container matColumnDef=\\\"ts2\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>T/S 2</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.ts2}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <!-- ts3 Column -->\\r\\n    <ng-container matColumnDef=\\\"ts3\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>T/S 3</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.ts3}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <!-- POD Column -->\\r\\n    <ng-container matColumnDef=\\\"pod\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>POD</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element \\\"> {{element.pod}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <!-- Proforma 1 -->\\r\\n    <ng-container matColumnDef=\\\"prof-1\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Proforma 1</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.prof1 }}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Proforma 2 -->\\r\\n    <ng-container matColumnDef=\\\"prof-2\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Proforma 2</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.prof2}}</mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Proforma 3 -->\\r\\n    <ng-container matColumnDef=\\\"prof-3\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Proforma 3</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.prof3}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <!-- Reson code -->\\r\\n    <ng-container matColumnDef=\\\"errorcode\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Error Code</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.errors}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n  </mat-table>\\r\\n\\r\\n  <mat-paginator #paginator\\r\\n                 [pageSize]=\\\"10\\\"\\r\\n                 [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\r\\n                 [showFirstLastButtons]=\\\"true\\\">\\r\\n  </mat-paginator>\\r\\n</div>\\r\\n\"","import {AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\r\n\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport {NewRoutingModel} from '../models/nre.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-nre-result',\r\n  templateUrl: './nre-result.component.html',\r\n  styleUrls: ['./nre-result.component.css']\r\n})\r\nexport class NewRoutingeEngineResultComponent implements OnInit, AfterViewInit, OnChanges {\r\n\r\n  @Input()\r\n  routings: Array<NewRoutingModel> = [];\r\n\r\n  displayedColumns = ['tt', 'pol', 'ts1', 'ts2', 'ts3', 'pod', 'prof-1', 'prof-2', 'prof-3', 'errorcode'];\r\n  dataSource: any;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n\r\n  /**\r\n   * Set the sort after the view init since this component will\r\n   * be able to query its view for the initialized sort.\r\n   */\r\n  ngAfterViewInit() {\r\n    console.log('after view init');\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('init');\r\n\r\n  }\r\n\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log('on changes' + JSON.stringify(changes));\r\n    this.dataSource = new MatTableDataSource(this.routings);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n.form-style-9 {\\r\\n  max-width: 400px;\\r\\n  background: #FAFAFA;\\r\\n  padding: 10px;\\r\\n  margin: 20px auto;\\r\\n  box-shadow: 1px 1px 25px rgba(0, 0, 0, 0.35);\\r\\n  border-radius: 10px;\\r\\n  border: 2px solid #305A72;\\r\\n}\\r\\n\\r\\n.smallFont {\\r\\n  font: 400 12px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\r\\n}\\r\\n\\r\\n.serviceType {\\r\\n  font: 400 12px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\r\\n  margin: 5px 0px 10px 15px;\\r\\n}\\r\\n\\r\\n.floatLeft {\\r\\n  float: left;\\r\\n  padding: 1px 1px 1px 1px;\\r\\n  margin: 1px 1px 1px 1px;\\r\\n  font-weight: bold;\\r\\n  color: #13557b;\\r\\n  height: 4px;\\r\\n  line-height: 0px;\\r\\n}\\r\\n\\r\\n/* ml */\\r\\n\\r\\n.stopFloat {\\r\\n  display: block;\\r\\n  float: none;\\r\\n  clear: both;\\r\\n  height: 0px; /* 1px, wenn kleine Linie bleiben soll */\\r\\n  font-size: 0px;\\r\\n  line-height: 0px;\\r\\n  background: #ffffff;\\r\\n}\\r\\n\\r\\nselect:hover {\\r\\n  background: rgba(0, 0, 0, 0);\\r\\n  color: #3a7999;\\r\\n}\\r\\n\\r\\n.tooltip {\\r\\n  position: relative;\\r\\n  display: inline-block;\\r\\n  border-bottom: 1px dotted black; /* If you want dots under the hoverable text */\\r\\n  visibility: hidden;\\r\\n  width: 120px;\\r\\n  background-color: black;\\r\\n  color: #fff;\\r\\n  text-align: center;\\r\\n  padding: 5px 0;\\r\\n  border-radius: 6px;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n/* Show the tooltip text when you mouse over the tooltip container */\\r\\n\\r\\n.tooltip:hover {\\r\\n  visibility: visible;\\r\\n}\\r\\n\\r\\n.isHidden {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.isShown {\\r\\n  display: inherit;\\r\\n}\\r\\n\"","module.exports = \"<\\r\\n<form class=\\\"form-style-9 mdl-color-text--light-blue-900\\\" style=\\\"background: #ecf4ff;\\\"\\r\\n      [formGroup]=\\\"form\\\"\\r\\n      novalidate (ngSubmit)=\\\"filterOceanRoutes()\\\">\\r\\n  <div id=\\\"im-search-form\\\" style=\\\"text-align: center;font-weight: bold;\\\">\\r\\n    {{ title }}\\r\\n\\r\\n    <ng-template #noResult>\\r\\n      No results found.\\r\\n    </ng-template>\\r\\n    <div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <mat-spinner [style.display]=\\\"showSpinner ? 'block' :'none'\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n  <!--  Rules -->\\r\\n  <div *ngIf=\\\"isCollapsed\\\">\\r\\n    <div style=\\\"border-width: 2px; border-color: #337DA8; border-style: solid; padding:5px; margin: 5px; \\\">\\r\\n      <!--- Port of Loading -->\\r\\n      <mat-form-field style=\\\"width: 150px; margin-left: 20px; margin-right: 20px;\\\">\\r\\n        <input matInput placeholder=\\\"Port of Loading\\\" formControlName=\\\"portOfLoading\\\" [matAutocomplete]=\\\"autoFrom\\\">\\r\\n        <mat-hint align=\\\"start\\\"> e.g. BRSSZ, HKHKG</mat-hint>\\r\\n        <mat-error>\\r\\n        <span\\r\\n          *ngIf=\\\"!portOfLoading.valid && portOfLoading.touched\\\">Invalid entry !</span>\\r\\n        </mat-error>\\r\\n        <mat-autocomplete #autoFrom=\\\"matAutocomplete\\\">\\r\\n          <mat-option *ngFor=\\\"let item of possiblePOLs\\\" [value]=\\\"item.locationCode\\\"\\r\\n                      style=\\\"height: 30px; line-height: 20px; background-color: #ecf4ff;\\\">\\r\\n            <span class=\\\"smallFont\\\"> {{ item.locationCode }}</span>\\r\\n          </mat-option>\\r\\n        </mat-autocomplete>\\r\\n      </mat-form-field>\\r\\n      <!--- Port of Destination -->\\r\\n      <mat-form-field style=\\\"width: 150px;\\\">\\r\\n        <input matInput placeholder=\\\"Port of Destination\\\" formControlName=\\\"portOfDestination\\\"\\r\\n               [matAutocomplete]=\\\"autoTo\\\">\\r\\n        <mat-error>\\r\\n        <span\\r\\n          *ngIf=\\\"!portOfDestination.valid && portOfDestination.touched\\\">Invalid entry !</span>\\r\\n        </mat-error>\\r\\n        <mat-autocomplete #autoTo=\\\"matAutocomplete\\\">\\r\\n          <mat-option *ngFor=\\\"let item of possiblePODs\\\" [value]=\\\"item.locationCode\\\"\\r\\n                      style=\\\"height: 30px; line-height: 20px; background-color: #ecf4ff;\\\">\\r\\n            <span class=\\\"smallFont\\\"> {{ item.locationCode }}</span>\\r\\n          </mat-option>\\r\\n        </mat-autocomplete>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div style=\\\"border-width: 2px; border-color: #337DA8; border-style: solid; padding:5px; margin: 5px; \\\">\\r\\n      <!---Vessel System 1 -->\\r\\n      <mat-form-field style=\\\"width: 120px; margin-left: 20px; margin-right: 20px;\\\">\\r\\n        <input matInput placeholder=\\\"Vessel System 1\\\" formControlName=\\\"vesselsystem_1\\\" [matAutocomplete]=\\\"autoVS1\\\">\\r\\n        <mat-hint align=\\\"start\\\"> e.g. Brazil Express</mat-hint>\\r\\n\\r\\n        <mat-autocomplete #autoVS1=\\\"matAutocomplete\\\">\\r\\n          <mat-option *ngFor=\\\"let item of possibleVS_1s\\\" [value]=\\\"item.vs_name\\\"\\r\\n                      style=\\\"height: 30px; line-height: 20px; background-color: #ecf4ff;\\\">\\r\\n            <span class=\\\"smallFont\\\"> {{ item.vs_name }}</span>\\r\\n          </mat-option>\\r\\n        </mat-autocomplete>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <!--- TS 1 -->\\r\\n      <mat-form-field style=\\\"width: 150px; margin-left: 20px; margin-right: 20px;\\\">\\r\\n        <input matInput placeholder=\\\"T/S-Port 1\\\" formControlName=\\\"ts_1\\\" [matAutocomplete]=\\\"ts1\\\">\\r\\n        <mat-autocomplete #ts1=\\\"matAutocomplete\\\">\\r\\n          <mat-option *ngFor=\\\"let item of possibleTS_1s\\\" [value]=\\\"item.locationCode\\\"\\r\\n                      style=\\\"height: 30px; line-height: 20px; background-color: #ecf4ff;\\\">\\r\\n            <span class=\\\"smallFont\\\"> {{ item.locationCode }}</span>\\r\\n          </mat-option>\\r\\n        </mat-autocomplete>\\r\\n      </mat-form-field>\\r\\n      <!---Vessel System 2 -->\\r\\n\\r\\n      <mat-form-field style=\\\"width: 120px; margin-left: 20px; margin-right: 20px;\\\">\\r\\n        <input matInput placeholder=\\\"Vessel System 2\\\" formControlName=\\\"vesselsystem_2\\\" [matAutocomplete]=\\\"autoVS2\\\">\\r\\n        <mat-autocomplete #autoVS2=\\\"matAutocomplete\\\">\\r\\n          <mat-option *ngFor=\\\"let item of possibleVS_2s\\\" [value]=\\\"item.vs_name\\\"\\r\\n                      style=\\\"height: 30px; line-height: 20px; background-color: #ecf4ff;\\\">\\r\\n            <span class=\\\"smallFont\\\"> {{ item.vs_name }}</span>\\r\\n          </mat-option>\\r\\n        </mat-autocomplete>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field style=\\\"width: 150px; margin-left: 20px; margin-right: 20px;\\\">\\r\\n        <input matInput placeholder=\\\"T/S-Port 2\\\" formControlName=\\\"ts_2\\\" [matAutocomplete]=\\\"ts2\\\">\\r\\n        <mat-autocomplete #ts2=\\\"matAutocomplete\\\">\\r\\n          <mat-option *ngFor=\\\"let item of possibleTS_2s\\\" [value]=\\\"item.locationCode\\\"\\r\\n                      style=\\\"height: 30px; line-height: 20px; background-color: #ecf4ff;\\\">\\r\\n            <span class=\\\"smallFont\\\"> {{ item.locationCode }}</span>\\r\\n          </mat-option>\\r\\n        </mat-autocomplete>\\r\\n      </mat-form-field>\\r\\n      <!---Vessel System 3 -->\\r\\n\\r\\n      <mat-form-field style=\\\"width: 120px; margin-left: 20px; margin-right: 20px;\\\">\\r\\n        <input matInput placeholder=\\\"Vessel System 3\\\" formControlName=\\\"vesselsystem_3\\\" [matAutocomplete]=\\\"autoVS3\\\">\\r\\n        <mat-autocomplete #autoVS3=\\\"matAutocomplete\\\">\\r\\n          <mat-option *ngFor=\\\"let item of possibleVS_3s\\\" [value]=\\\"item.vs_name\\\"\\r\\n                      style=\\\"height: 30px; line-height: 20px; background-color: #ecf4ff;\\\">\\r\\n            <span class=\\\"smallFont\\\"> {{ item.vs_name }}</span>\\r\\n          </mat-option>\\r\\n        </mat-autocomplete>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field style=\\\"width: 150px; margin-left: 20px; margin-right: 20px;\\\">\\r\\n        <input matInput placeholder=\\\"T/S-Port 3\\\" formControlName=\\\"ts_3\\\" [matAutocomplete]=\\\"ts3\\\">\\r\\n        <mat-autocomplete #ts3=\\\"matAutocomplete\\\">\\r\\n          <mat-option *ngFor=\\\"let item of possibleTS_3s\\\" [value]=\\\"item.locationCode\\\"\\r\\n                      style=\\\"height: 30px; line-height: 20px; background-color: #ecf4ff;\\\">\\r\\n            <span class=\\\"smallFont\\\"> {{ item.locationCode }}</span>\\r\\n          </mat-option>\\r\\n        </mat-autocomplete>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <!--- Start and End Date -->\\r\\n    <div style=\\\"border-width: 2px; border-color: #337DA8; border-style: solid; padding:5px; margin: 5px; \\\">\\r\\n\\r\\n      <mat-form-field style=\\\"width: 150px; margin-left: 20px; margin-right: 20px; \\\">\\r\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"start date\\\"\\r\\n               formControlName=\\\"startDate\\\">\\r\\n        <mat-error>\\r\\n          <span *ngIf=\\\"!form.get('startDate').valid && form.get('startDate').touched\\\">Please enter Start Date!</span>\\r\\n        </mat-error>\\r\\n\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker1></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field style=\\\"width: 150px;\\\">\\r\\n        <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"end date\\\"\\r\\n               formControlName=\\\"endDate\\\" readonly>\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker2 disabled=\\\"true\\\"></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!--- # tsPorts invalid included -->\\r\\n  <div style=\\\"border-width: 2px; border-color: #337DA8; border-style: solid; padding:5px; margin: 5px; \\\">\\r\\n    <span>Include:</span>\\r\\n    <mat-grid-list cols=\\\"7\\\">\\r\\n      <mat-grid-tile colspan=\\\"4\\\">\\r\\n        <div>\\r\\n          <label class=\\\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect \\\" for=\\\"checkbox-invalid\\\">\\r\\n            <input type=\\\"checkbox\\\" id=\\\"checkbox-invalid\\\" class=\\\"mdl-checkbox__input\\\" formControlName=\\\"includeInvalid\\\">\\r\\n            <span class=\\\"mat-small\\\">Invalid Routings</span>\\r\\n          </label>\\r\\n          <label class=\\\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect \\\" for=\\\"checkbox-shunting\\\">\\r\\n            <input type=\\\"checkbox\\\" id=\\\"checkbox-shunting\\\" class=\\\"mdl-checkbox__input\\\" formControlName=\\\"includeShunting\\\">\\r\\n            <span class=\\\"mat-small\\\">Shunting</span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile colspan=\\\"3\\\">\\r\\n        <div class=\\\"mat-small\\\" style=\\\"margin-bottom: 10px; margin-top: 11px; \\\"># of T/S Ports:\\r\\n          <select formControlName=\\\"numberTs\\\" class=\\\"mdl-color-text--light-blue-900\\\"\\r\\n                  style=\\\"width: 57px; \\\">\\r\\n            <option class=\\\"mdl-color-text--light-blue-900\\\" *ngFor=\\\"let e of numberTsPorts\\\" [value]=\\\"e\\\">{{e}}\\r\\n            </option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </mat-grid-list>\\r\\n  </div>\\r\\n\\r\\n  <div style=\\\"border-width: 2px; border-color: #337DA8; border-style: solid;  margin: 5px; padding: 10px; \\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"toggle()\\\">{{button_name}}</button>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"reset()\\\">Reset</button>\\r\\n    <button mat-raised-button type=”submit” [disabled]=\\\"isInvalid()\\\">\\r\\n      <mat-icon>search</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<div *ngIf=\\\"routes.length > 0; else noResult\\\">\\r\\n  <app-nre-result [routings]=\\\"routes\\\"></app-nre-result>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, OnChanges, OnInit, SimpleChanges} from '@angular/core';\r\nimport {EnumService} from '../../services/enum.service';\r\n\r\nimport {AbstractControl, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\n\r\nimport {GeoScopeService} from '../../services/geoscope.service';\r\nimport {GeoScopeModel} from '../../model/geoscope.model';\r\nimport {VesselSystemModel} from '../../model/vesselsystem.model';\r\nimport {NewRoutesSearchService} from '../services/new-routing-engine.search.service';\r\nimport {NewRoutingModel} from '../models/nre.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-nre-search-routes',\r\n  templateUrl: './nre-search.component.html',\r\n  styleUrls: ['./nre-search.component.css']\r\n})\r\nexport class NewRoutingEngineComponent implements OnInit, OnChanges {\r\n\r\n  title = 'Search Ocean Routes (NRE)';\r\n  isCollapsed = true;\r\n  button_name = 'Hide Form';\r\n  showSpinner = false;\r\n  isActive = false;\r\n  routes: Array<NewRoutingModel> = [];\r\n\r\n  searchFormOceanRoutes: FormGroup;\r\n  possiblePOLs: GeoScopeModel[] = [];\r\n  possiblePODs: GeoScopeModel[] = [];\r\n\r\n  possibleVS_1s: VesselSystemModel[] = [];\r\n  possibleVS_2s: VesselSystemModel[] = [];\r\n  possibleVS_3s: VesselSystemModel[] = [];\r\n\r\n\r\n  possibleTS_1s: GeoScopeModel[] = [];\r\n  possibleTS_2s: GeoScopeModel[] = [];\r\n  possibleTS_3s: GeoScopeModel[] = [];\r\n\r\n  numberTsPorts: Array<number> = [0, 1, 2, 3];\r\n\r\n  constructor(private enumService: EnumService, private masterDataService: GeoScopeService,\r\n              private searchService: NewRoutesSearchService) {\r\n    console.log('constructor');\r\n\r\n\r\n    this.searchFormOceanRoutes = new FormGroup({\r\n      portOfLoading: new FormControl('', Validators.required),\r\n      portOfDestination: new FormControl(''),\r\n      vesselsystem_1: new FormControl(),\r\n      vesselsystem_2: new FormControl(),\r\n      vesselsystem_3: new FormControl(),\r\n      ts_1: new FormControl(),\r\n      ts_2: new FormControl(),\r\n      ts_3: new FormControl(),\r\n      includeInvalid: new FormControl(false),\r\n      includeShunting: new FormControl(true),\r\n      numberTs: new FormControl('1', Validators.required),\r\n\r\n      startDate: new FormControl(new Date().toISOString(), Validators.required),\r\n      endDate: new FormControl(new Date().toISOString())\r\n\r\n\r\n    });\r\n    console.log('constructor middle');\r\n    // set default values in form\r\n    this.patchDefaultValues();\r\n    this.setEndDate(new Date(this.startDate.value));\r\n\r\n    // event handler\r\n    this.onPortOfLoadingChanges(this.portOfLoading);\r\n    console.log('constructor pol');\r\n    this.onPortOfDestinationChanges(this.portOfDestination);\r\n\r\n    this.onStartDateChanges(this.startDate);\r\n    console.log('constructor startdate ready');\r\n\r\n    this.onVS1Changes(this.vesselsystem_1);\r\n    this.onVS2Changes(this.vesselsystem_2);\r\n    this.onVS3Changes(this.vesselsystem_3);\r\n    console.log('constructor vs ready');\r\n    this.onTsPortChanges(this.ts_1, 1);\r\n    this.onTsPortChanges(this.ts_2, 2);\r\n    this.onTsPortChanges(this.ts_3, 3);\r\n    console.log('constructor end');\r\n  }\r\n\r\n  get form() {\r\n    return this.searchFormOceanRoutes;\r\n  }\r\n\r\n\r\n  get trade() {\r\n    return this.form.get('trade');\r\n  }\r\n\r\n  get portOfLoading() {\r\n    return this.form.get('portOfLoading');\r\n  }\r\n\r\n\r\n  get portOfDestination() {\r\n    return this.form.get('portOfDestination');\r\n  }\r\n\r\n  get vesselsystem_1() {\r\n    return this.form.get('vesselsystem_1');\r\n  }\r\n\r\n  get vesselsystem_2() {\r\n    return this.form.get('vesselsystem_2');\r\n  }\r\n\r\n  get vesselsystem_3() {\r\n    return this.form.get('vesselsystem_3');\r\n  }\r\n\r\n  get ts_1() {\r\n    return this.form.get('ts_1');\r\n  }\r\n\r\n  get ts_2() {\r\n    return this.form.get('ts_2');\r\n  }\r\n\r\n  get ts_3() {\r\n    return this.form.get('ts_3');\r\n  }\r\n\r\n  get startDate() {\r\n    return this.form.get('startDate');\r\n  }\r\n\r\n  get endDate() {\r\n    return this.form.get('endDate');\r\n  }\r\n\r\n  get numberTs() {\r\n    return this.form.get('numberTs');\r\n  }\r\n\r\n  get includeInvalid() {\r\n    return this.form.get('includeInvalid');\r\n  }\r\n\r\n  get includeShunting() {\r\n    return this.form.get('includeShunting');\r\n  }\r\n\r\n  toggle() {\r\n    this.isCollapsed = !this.isCollapsed;\r\n\r\n    // CHANGE THE TEXT OF THE BUTTON.\r\n    if (this.isCollapsed) {\r\n      this.button_name = 'Hide Form';\r\n    } else {\r\n      this.button_name = 'Show Form';\r\n    }\r\n  }\r\n\r\n  isInvalid() {\r\n    return this.form.invalid;\r\n  }\r\n\r\n\r\n  filterOceanRoutes() {\r\n    console.log('filter ocean routes');\r\n    this.showSpinner = false;\r\n    this.routes = [];\r\n    this.searchService.getRoutings(this.form.value).subscribe(result => {\r\n      console.log('ocean routings: ' + JSON.stringify(result));\r\n      if (result && result.length > 0) {\r\n        this.routes = result;\r\n        this.toggle();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  reset() {\r\n    this.patchDefaultValues();\r\n    this.setEndDate(this.startDate.value);\r\n    this.possiblePODs = [];\r\n    this.possiblePOLs = [];\r\n    this.possibleVS_1s = [];\r\n    this.possibleVS_2s = [];\r\n    this.possibleVS_3s = [];\r\n    this.numberTsPorts = [];\r\n    this.possibleTS_1s = [];\r\n    this.possibleTS_2s = [];\r\n    this.possibleTS_3s = [];\r\n\r\n  }\r\n\r\n\r\n  private onPortOfLoadingChanges(control: AbstractControl) {\r\n    control.valueChanges\r\n      .pipe(debounceTime(400),\r\n        distinctUntilChanged())\r\n      .subscribe(data => {\r\n        const theLength: number = data.toString().trim().length;\r\n        if (theLength === 0) {\r\n          this.possiblePOLs = [];\r\n          this.portOfLoading.markAsDirty();\r\n          return;\r\n        }\r\n        if (theLength < 3) {\r\n          this.possiblePOLs = [];\r\n          return;\r\n        }\r\n\r\n        this.masterDataService.filterPortLocations(data).subscribe(\r\n          result => {\r\n            if (result.length === 0) {\r\n              this.portOfLoading.markAsTouched();\r\n\r\n            } else if (result.length === 1) {\r\n              const singleRow: string = result[0].locationCode;\r\n              this.portOfLoading.patchValue(singleRow.toUpperCase());\r\n              console.log('single:' + JSON.stringify(this.portOfLoading.value));\r\n              this.portOfLoading.markAsUntouched();\r\n\r\n            } else {\r\n              this.portOfLoading.markAsUntouched();\r\n\r\n              this.possiblePOLs = result;\r\n\r\n            }\r\n          });\r\n\r\n      });\r\n\r\n  }\r\n\r\n\r\n  private onPortOfDestinationChanges(control: AbstractControl) {\r\n    control.valueChanges\r\n      .pipe(debounceTime(400),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(data => {\r\n        const theLength: number = data.toString().trim().length;\r\n        if (theLength === 0) {\r\n          this.possiblePODs = [];\r\n          this.portOfDestination.markAsDirty();\r\n          return;\r\n        }\r\n        if (theLength < 3) {\r\n          this.possiblePODs = [];\r\n          return;\r\n        }\r\n\r\n        this.masterDataService.filterPodLocations(data).subscribe(\r\n          result => {\r\n\r\n            console.log('result:' + JSON.stringify(result));\r\n            if (result.length === 0) {\r\n              this.portOfDestination.markAsTouched();\r\n\r\n            } else if (result.length === 1) {\r\n              const singleRow: string = result[0].locationCode;\r\n              this.portOfDestination.patchValue(singleRow.toUpperCase());\r\n              console.log('single:' + JSON.stringify(this.portOfLoading.value));\r\n              this.portOfDestination.markAsUntouched();\r\n            } else {\r\n              this.portOfDestination.markAsUntouched();\r\n\r\n              this.possiblePODs = result;\r\n\r\n            }\r\n          });\r\n\r\n      });\r\n\r\n  }\r\n\r\n  private onTsPortChanges(control: AbstractControl, num: number) {\r\n    control.valueChanges\r\n      .pipe(debounceTime(400),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(data => {\r\n        const theLength: number = data.toString().trim().length;\r\n        if (theLength < 3) {\r\n          switch (num) {\r\n            case 1: {\r\n              this.possibleTS_1s = [];\r\n              break;\r\n            }\r\n            case 2: {\r\n              this.possibleTS_2s = [];\r\n              break;\r\n            }\r\n            case 3: {\r\n              this.possibleTS_3s = [];\r\n              break;\r\n            }\r\n            default: {\r\n              break;\r\n            }\r\n          }\r\n          return;\r\n        }\r\n        this.masterDataService.filterPodLocations(data).subscribe(\r\n          result => {\r\n\r\n            console.log('result:' + JSON.stringify(result));\r\n            if (result.length === 1) {\r\n              const singleRow: string = result[0].locationCode;\r\n              switch (num) {\r\n                case 1: {\r\n                  this.ts_1.patchValue(singleRow.toUpperCase());\r\n\r\n                  break;\r\n                }\r\n                case 2: {\r\n                  this.ts_2.patchValue(singleRow.toUpperCase());\r\n                  break;\r\n                }\r\n                case 3: {\r\n                  this.ts_3.patchValue(singleRow.toUpperCase());\r\n                  break;\r\n                }\r\n                default: {\r\n                  break;\r\n                }\r\n              }\r\n            } else {\r\n              switch (num) {\r\n                case 1: {\r\n                  this.possibleTS_1s = result;\r\n\r\n                  break;\r\n                }\r\n                case 2: {\r\n                  this.possibleTS_2s = result;\r\n                  break;\r\n                }\r\n                case 3: {\r\n                  this.possibleTS_3s = result;\r\n                  break;\r\n                }\r\n                default: {\r\n                  break;\r\n                }\r\n              }\r\n\r\n            }\r\n          });\r\n\r\n      });\r\n\r\n  }\r\n\r\n  private onVS1Changes(control: AbstractControl) {\r\n    control.valueChanges\r\n      .pipe(debounceTime(400),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(data => {\r\n        const theLength: number = data.toString().trim().length;\r\n        if (theLength === 0) {\r\n          this.possibleVS_1s = [];\r\n          this.vesselsystem_1.markAsDirty();\r\n          return;\r\n        }\r\n        if (theLength < 3) {\r\n          this.possibleVS_1s = [];\r\n          return;\r\n        }\r\n\r\n        this.masterDataService.filterVS(data).subscribe(\r\n          result => {\r\n\r\n            console.log('result:' + JSON.stringify(result));\r\n            if (result.length === 1) {\r\n              const singleRow: string = result[0].vs_name;\r\n              this.vesselsystem_1.patchValue(singleRow.toUpperCase());\r\n              console.log('single:' + JSON.stringify(this.vesselsystem_1.value));\r\n              this.vesselsystem_1.markAsUntouched();\r\n\r\n            } else {\r\n              this.possibleVS_1s = result;\r\n\r\n            }\r\n          });\r\n\r\n      });\r\n\r\n  }\r\n\r\n\r\n  private onVS2Changes(control: AbstractControl) {\r\n    control.valueChanges\r\n      .pipe(debounceTime(400),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(data => {\r\n        const theLength: number = data.toString().trim().length;\r\n        if (theLength === 0) {\r\n          this.possibleVS_2s = [];\r\n          this.vesselsystem_2.markAsDirty();\r\n          return;\r\n        }\r\n        if (theLength < 3) {\r\n          this.possibleVS_2s = [];\r\n          return;\r\n        }\r\n\r\n        this.masterDataService.filterVS(data).subscribe(\r\n          result => {\r\n\r\n            console.log('result:' + JSON.stringify(result));\r\n            if (result.length === 1) {\r\n              const singleRow: string = result[0].vs_name;\r\n              this.vesselsystem_2.patchValue(singleRow.toUpperCase());\r\n              console.log('single:' + JSON.stringify(this.vesselsystem_1.value));\r\n              this.vesselsystem_2.markAsUntouched();\r\n\r\n            } else {\r\n              this.possibleVS_2s = result;\r\n\r\n            }\r\n          });\r\n\r\n      });\r\n\r\n  }\r\n\r\n  private onVS3Changes(control: AbstractControl) {\r\n    control.valueChanges\r\n      .pipe(debounceTime(400),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(data => {\r\n        const theLength: number = data.toString().trim().length;\r\n        if (theLength === 0) {\r\n          this.possibleVS_3s = [];\r\n          this.vesselsystem_3.markAsDirty();\r\n          return;\r\n        }\r\n        if (theLength < 3) {\r\n          this.possibleVS_3s = [];\r\n          return;\r\n        }\r\n\r\n        this.masterDataService.filterVS(data).subscribe(\r\n          result => {\r\n\r\n            console.log('result:' + JSON.stringify(result));\r\n            if (result.length === 1) {\r\n              const singleRow: string = result[0].vs_name;\r\n              this.vesselsystem_3.patchValue(singleRow.toUpperCase());\r\n              console.log('single:' + JSON.stringify(this.vesselsystem_1.value));\r\n              this.vesselsystem_3.markAsUntouched();\r\n\r\n            } else {\r\n              this.possibleVS_3s = result;\r\n\r\n            }\r\n          });\r\n\r\n      });\r\n\r\n  }\r\n\r\n  private onStartDateChanges(control: AbstractControl | any) {\r\n    console.log('onStartDateChanges start');\r\n\r\n    control.valueChanges.pipe(distinctUntilChanged()).subscribe(data => {\r\n      this.startDate.patchValue(new Date(data).toISOString());\r\n      console.log('onStartDateChanges middle');\r\n      this.setEndDate(new Date(data));\r\n    });\r\n    console.log('onStartDateChanges end');\r\n\r\n  }\r\n\r\n  private setEndDate(date: Date) {\r\n    const newDay: number = ( date.getDate() + 14);\r\n    const newDate: Date = new Date();\r\n    newDate.setDate(newDay);\r\n\r\n    this.endDate.patchValue(newDate.toISOString());\r\n  }\r\n\r\n  private patchDefaultValues() {\r\n    this.includeInvalid.patchValue(false);\r\n    this.includeShunting.patchValue(true);\r\n    this.numberTs.patchValue('1');\r\n    this.portOfLoading.patchValue('');\r\n    this.portOfDestination.patchValue('');\r\n    this.vesselsystem_1.patchValue('');\r\n    this.vesselsystem_2.patchValue('');\r\n    this.vesselsystem_3.patchValue('');\r\n    this.ts_1.patchValue('');\r\n    this.ts_2.patchValue('');\r\n    this.ts_3.patchValue('');\r\n    this.startDate.patchValue(new Date().toISOString());\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    console.log('init');\r\n\r\n  }\r\n\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log('on changes' + JSON.stringify(changes));\r\n  }\r\n\r\n\r\n}\r\n","/**\r\n * Created by ekirschning on 10.04.2017.\r\n */\r\n\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {ConfigService} from '../../services/config.service';\r\nimport {EntityEnum} from '../../enums/app-enum';\r\nimport {NewRoutingModel} from '../models/nre.model';\r\n\r\n\r\n@Injectable()\r\nexport class NewRoutesSearchService {\r\n  private serverApi = ConfigService.get('tomcat');\r\n  private resource = '/';\r\n  private objectType = EntityEnum.ROUTING_RESULT;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n\r\n  private static getHeader(): HttpHeaders {\r\n    return new HttpHeaders().set('Content-Type', 'application/json');\r\n  }\r\n\r\n\r\n  private getUrl(): string {\r\n    return this.serverApi + this.resource + this.objectType + this.resource;\r\n  }\r\n\r\n  getRoutings(imSearchModel: object): Observable<Array<NewRoutingModel>> {\r\n    console.log('search model:' + JSON.stringify(imSearchModel));\r\n    console.log('typeof:' + typeof imSearchModel);\r\n    const search_params: HttpParams = this.prepareSearchParams(imSearchModel);\r\n\r\n    const URI = this.getUrl() + 'filter/';\r\n    return this.http.get<Array<NewRoutingModel>>(URI, {params: search_params});\r\n\r\n  }\r\n\r\n  private prepareSearchParams(imSearchModel: Object) {\r\n    const search_params = new HttpParams()\r\n      .set('includeInvalid', imSearchModel['includeInvalid'])\r\n      .set('includeShunting', imSearchModel['includeShunting'])\r\n      .set('numberTs', imSearchModel['numberTs'])\r\n      .set('pol', imSearchModel['portOfLoading'])\r\n      .set('pod', imSearchModel['portOfDestination'])\r\n      .set('trade', imSearchModel['trade'])\r\n      .set('ts1', imSearchModel['ts_1'])\r\n      .set('ts2', imSearchModel['ts_2'])\r\n      .set('ts3', imSearchModel['ts_3'])\r\n      .set('startDate', imSearchModel['startDate'].toString().substring(0, 10))\r\n      .set('endDate', imSearchModel['endDate'].toString().substring(0, 10));\r\n    return search_params;\r\n  }\r\n\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'changeDetector',\r\n  pure: false\r\n})\r\nexport class ChangeDetectorPipe implements PipeTransform {\r\n  count = 0;\r\n\r\n  transform(value: any, args?: any): any {\r\n    this.count++;\r\n    //  console.log(`Component change detection executed ${this.count} times`);\r\n    return value;\r\n  }\r\n}\r\n","export class ConfigService {\r\n\r\n  private _api: string;\r\n\r\n  private _glassfish: string;\r\n\r\n  static set(property, value) {\r\n    this['_' + property] = value;\r\n  }\r\n\r\n  static get(property) {\r\n    return this['_' + property];\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable, throwError,of} from 'rxjs';\r\nimport {HttpClient, HttpErrorResponse, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {EntityEnum} from '../enums/app-enum';\r\nimport {CountryModel} from '../model/country.model';\r\nimport {catchError} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class CountryService {\r\n  countryCodes: Array<CountryModel> = [];\r\n\r\n  readonly serverApi = 'http://localhost:8080/nre';\r\n  private resource = '/';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  public static getHeader(): HttpHeaders {\r\n    return new HttpHeaders().set('Content-Type', 'application/json');\r\n  }\r\n\r\n\r\n  private getUrl(objectType: EntityEnum): string {\r\n    return this.serverApi + this.resource + objectType + this.resource;\r\n  }\r\n\r\n\r\n\r\n  filterCountries(query: string): Observable<Array<CountryModel>> {\r\n    console.error('service:filter countries:', query);\r\n    const search_params: HttpParams = new HttpParams().set('country_code', query.toUpperCase());\r\n    const URI = this.getUrl(EntityEnum.COUNTRY) + 'filter/';\r\n    let result: Observable<Array<CountryModel>>;\r\n    result = this.http\r\n      .get<Array<CountryModel>>(URI, {params: search_params}).pipe(\r\n      catchError(this._handleError));\r\n    console.log('find Countries Result:');\r\n    return result;\r\n  }\r\n\r\n\r\n\r\n\r\n  private _handleError(error: HttpErrorResponse | any) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    const errorMsg = error.message || 'Error: Unable to complete request.';\r\n    return throwError(errorMsg);\r\n\r\n\r\n  }\r\n\r\n  private log(message: any) {\r\n    console.log('CountryService: ' + message);\r\n  }\r\n\r\n  filterCountryCode(query: string):Observable<Array<CountryModel>> {\r\n    this.log('filter country code:' + query);\r\n   this.countryCodes= [];\r\n      this.countryCodes.push(new CountryModel(1, 'DK', 'DK'));\r\n      this.countryCodes.push(new CountryModel(1, 'DE', 'DE'));\r\n      this.countryCodes.push(new CountryModel(1, 'FR', 'FR'));\r\n      this.countryCodes.push(new CountryModel(1, 'NL', 'NL'));\r\n      this.countryCodes.push(new CountryModel(1, 'SE', 'SE'));\r\n      this.countryCodes.push(new CountryModel(1, 'NO', 'NO'));\r\n     const result: CountryModel[] =this.countryCodes.filter((countryCode) => countryCode.code.toLowerCase().startsWith(query.toLowerCase()));\r\n     return of(result);\r\n\r\n  }\r\n}\r\n","import {NativeDateAdapter} from '@angular/material';\r\n\r\n\r\nexport class AppDateAdapter extends NativeDateAdapter {\r\n\r\n  format(date: Date, displayFormat: Object): string {\r\n\r\n    if (displayFormat === 'input') {\r\n      const day = date.getDate();\r\n      const month = date.getMonth() + 1;\r\n      const year = date.getFullYear();\r\n      return `${day}-${month}-${year}`;\r\n    } else {\r\n      return date.toDateString();\r\n    }\r\n  }\r\n\r\n}\r\n","export const APP_DATE_FORMATS =\r\n  {\r\n    parse: {\r\n      dateInput: {month: 'short', year: 'numeric', day: 'numeric'},\r\n    },\r\n    display: {\r\n      dateInput: 'input',\r\n      monthYearLabel: {year: 'numeric', month: 'numeric'},\r\n      dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\r\n      monthYearA11yLabel: {year: 'numeric', month: 'long'},\r\n    }\r\n  };\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class EnumService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public getEnumKeys(_enum: any): Array<string> {\r\n    return Object.keys(_enum);\r\n  }\r\n\r\n  public getEnumValues(_enum: any): Array<string> {\r\n    return Object.values(_enum);\r\n  }\r\n\r\n  public getKeyByValue(object: any, value: string): string {\r\n    return Object.keys(object).find(key => object[key] === value);\r\n  }\r\n\r\n\r\n  public getValueByKey(object: any, key: string): any {\r\n    return Object.values(object).find(value => value === object[key]);\r\n\r\n  }\r\n}\r\n","/**\r\n * Created by ekirschning on 28.03.2017.\r\n */\r\n\r\n\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable, of} from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {HttpClient, HttpErrorResponse, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {EntityEnum} from '../enums/app-enum';\r\nimport {GeoScopeModel} from '../model/geoscope.model';\r\n\r\nimport {VesselSystemModel} from '../model/vesselsystem.model';\r\nimport {TradeModel} from '../model/trade.model';\r\nimport {ContractModel} from '../model/contract.model';\r\nimport {CountryModel} from '../model/country.model';\r\n\r\n@Injectable()\r\nexport class GeoScopeService {\r\n  locations: Array<GeoScopeModel> = [];\r\n  prefPorts: Array<GeoScopeModel> = [];\r\n\r\n\r\n  readonly serverApi = 'http://localhost:8080/nre';\r\n  private resource = '/';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  public static getHeader(): HttpHeaders {\r\n    return new HttpHeaders().set('Content-Type', 'application/json');\r\n  }\r\n\r\n  private getUrl(objectType: EntityEnum): string {\r\n    return this.serverApi + this.resource + objectType + this.resource;\r\n  }\r\n\r\n\r\n  filterVesselSystems(query: string): Observable<VesselSystemModel[]> {\r\n    const search_params = new HttpParams().set('vs_code', query.toUpperCase());\r\n    const URI = this.getUrl(EntityEnum.VESSEL_SYSTEMS) + 'filter/';\r\n    return this.http\r\n      .get<Array<VesselSystemModel>>(URI, {params: search_params}).pipe(\r\n        catchError(this._handleError));\r\n  }\r\n\r\n\r\n  filterLocations(query: string, geoScopeType: string, countryCode: string): Observable<Array<GeoScopeModel>> {\r\n    const search_params: HttpParams = this.prepareGeoScopeSearchParams(query, geoScopeType, countryCode);\r\n    const URI = this.getUrl(EntityEnum.GEOSCOPE) + 'filter/';\r\n    console.log('uri:' + URI);\r\n    console.log('params:' + search_params);\r\n    return this.http\r\n      .get<Array<GeoScopeModel>>(URI, {params: search_params}).pipe(\r\n        catchError(this._handleError));\r\n  }\r\n\r\n\r\n  filterPreferredPorts(query: string, geoScopeType: string, countryCode: string): Observable<Array<GeoScopeModel>> {\r\n    const search_params: HttpParams = this.prepareGeoScopeSearchParams(query, geoScopeType, countryCode);\r\n    const URI = this.getUrl(EntityEnum.PREFERRED_PORTS) + 'filter/';\r\n    console.log('uri:' + URI);\r\n    console.log('params:' + search_params);\r\n    return this.http\r\n      .get<Array<GeoScopeModel>>(URI, {params: search_params})\r\n      .pipe(\r\n        catchError(this._handleError));\r\n  }\r\n\r\n  filterPorts(query: string): Observable<Array<GeoScopeModel>> {\r\n    const search_params = new HttpParams().set('location_code', query.toUpperCase());\r\n    const URI = this.getUrl(EntityEnum.PORTS) + 'filter/';\r\n    console.log('uri:' + URI);\r\n    console.log('params:' + search_params);\r\n    return this.http\r\n      .get<Array<GeoScopeModel>>(URI, {params: search_params})\r\n      .pipe(\r\n        catchError(this._handleError));\r\n  }\r\n\r\n  prepareGeoScopeSearchParams(query: string, geoScopeType: string, countryCode: string) {\r\n    const search_params = new HttpParams()\r\n      .set('location_code', query.toUpperCase())\r\n      .set('geo_scope_type', geoScopeType.toUpperCase())\r\n      .set('country_code', countryCode);\r\n    return search_params;\r\n  }\r\n\r\n\r\n  filterContracts(query: string): Observable<Array<ContractModel>> {\r\n    const search_params: HttpParams = new HttpParams()\r\n      .set('contract_no', query.toUpperCase());\r\n    const URI = this.getUrl(EntityEnum.CONTRACT) + 'filter/';\r\n\r\n    return this.http\r\n      .get<Array<ContractModel>>(URI, {params: search_params})\r\n      .pipe(\r\n        catchError(this._handleError));\r\n  }\r\n\r\n  filterContractGroups(query: string): Observable<Array<ContractModel>> {\r\n    const search_params: HttpParams = new HttpParams()\r\n      .set('contract_no', query.toUpperCase());\r\n    const URI = this.getUrl(EntityEnum.CONTRACT_GROUP) + 'filter/';\r\n\r\n    return this.http\r\n      .get<Array<ContractModel>>(URI, {params: search_params})\r\n      .pipe(\r\n        catchError(this._handleError));\r\n  }\r\n\r\n\r\n  filterTrades(query: string): Observable<Array<TradeModel>> {\r\n    const search_params: HttpParams = new HttpParams()\r\n      .set('trade_code', query.toUpperCase());\r\n    const URI = this.getUrl(EntityEnum.TRADE) + 'filter/';\r\n\r\n    return this.http\r\n      .get<Array<TradeModel>>(URI, {params: search_params})\r\n      .pipe(\r\n        catchError(this._handleError));\r\n  }\r\n\r\n  private _handleError(err: HttpErrorResponse | any) {\r\n    console.log('_handleError:' + err);\r\n    const errorMsg = err.message || 'Error: Unable to complete request.';\r\n    return Observable.throw(errorMsg);\r\n  }\r\n\r\n  // dummy methods\r\n\r\n  filterPortLocations(query: string): Observable<Array<GeoScopeModel>> {\r\n    console.log('service: filter port locations:' + query);\r\n    this.prefPorts = [];\r\n    this.prefPorts.push(new GeoScopeModel(1, 'DEHAM', '', ''));\r\n    this.prefPorts.push(new GeoScopeModel(2, 'DEBRV', '', ''));\r\n    this.prefPorts.push(new GeoScopeModel(3, 'NLRTM', '', ''));\r\n    this.prefPorts.push(new GeoScopeModel(4, 'BEANR', '', ''));\r\n    return of(this.prefPorts);\r\n  }\r\n\r\n  filterPodLocations(query: string): Observable<Array<GeoScopeModel>> {\r\n    console.log('service: filter port locations:' + query);\r\n    this.prefPorts = [];\r\n    this.prefPorts.push(new GeoScopeModel(1, 'BRSSZ', '', ''));\r\n    this.prefPorts.push(new GeoScopeModel(2, 'BRMAO', '', ''));\r\n    this.prefPorts.push(new GeoScopeModel(3, 'BRSUA', '', ''));\r\n    this.prefPorts.push(new GeoScopeModel(4, 'BRITA', '', ''));\r\n    return of(this.prefPorts);\r\n  }\r\n\r\n  filterImLocations(code: string, geoScopeType: string, countryCode: string): Observable<Array<GeoScopeModel>> {\r\n    console.log('service: filter im locations:' + geoScopeType);\r\n    this.locations = [];\r\n\r\n    this.locations.push(new GeoScopeModel(1, 'DUSSELDORF', 'T', 'D'));\r\n    this.locations.push(new GeoScopeModel(2, 'DUSHEIM', 'T', 'D'));\r\n    this.locations.push(new GeoScopeModel(3, 'DUSENHAUSEN', 'T', 'D'));\r\n    this.locations.push(new GeoScopeModel(4, 'DEDUS', '', ''));\r\n    this.locations.push(new GeoScopeModel(5, 'DEDUI', '', ''));\r\n\r\n    const result: GeoScopeModel[] = this.locations.filter((imLocation) => imLocation.locationCode.toLowerCase().startsWith(code.toLowerCase()));\r\n    return of(result);\r\n  }\r\n\r\n\r\n  filterVS(query: string): Observable<VesselSystemModel[]> {\r\n    const vs:Array<VesselSystemModel> = [];\r\n    return of(vs);\r\n  }\r\n\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {AppMaterialModule} from '../app-material.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppMaterialModule,\r\n  ],\r\n  declarations: []\r\n})\r\nexport class SharedModule {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}